'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Transport_Comp1")>  _
Partial Public Class PositonsDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertVehicle(instance As Vehicle)
    End Sub
  Partial Private Sub UpdateVehicle(instance As Vehicle)
    End Sub
  Partial Private Sub DeleteVehicle(instance As Vehicle)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Position_Updater.My.MySettings.Default.Transport_Comp1ConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Vehicles() As System.Data.Linq.Table(Of Vehicle)
		Get
			Return Me.GetTable(Of Vehicle)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vehicle")>  _
Partial Public Class Vehicle
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _dwVehicleId As Integer
	
	Private _szRegistration As String
	
	Private _bSold As Short
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OndwVehicleIdChanging(value As Integer)
    End Sub
    Partial Private Sub OndwVehicleIdChanged()
    End Sub
    Partial Private Sub OnszRegistrationChanging(value As String)
    End Sub
    Partial Private Sub OnszRegistrationChanged()
    End Sub
    Partial Private Sub OnbSoldChanging(value As Short)
    End Sub
    Partial Private Sub OnbSoldChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dwVehicleId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property dwVehicleId() As Integer
		Get
			Return Me._dwVehicleId
		End Get
		Set
			If ((Me._dwVehicleId = value)  _
						= false) Then
				Me.OndwVehicleIdChanging(value)
				Me.SendPropertyChanging
				Me._dwVehicleId = value
				Me.SendPropertyChanged("dwVehicleId")
				Me.OndwVehicleIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_szRegistration", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property szRegistration() As String
		Get
			Return Me._szRegistration
		End Get
		Set
			If (String.Equals(Me._szRegistration, value) = false) Then
				Me.OnszRegistrationChanging(value)
				Me.SendPropertyChanging
				Me._szRegistration = value
				Me.SendPropertyChanged("szRegistration")
				Me.OnszRegistrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bSold", DbType:="SmallInt NOT NULL")>  _
	Public Property bSold() As Short
		Get
			Return Me._bSold
		End Get
		Set
			If ((Me._bSold = value)  _
						= false) Then
				Me.OnbSoldChanging(value)
				Me.SendPropertyChanging
				Me._bSold = value
				Me.SendPropertyChanged("bSold")
				Me.OnbSoldChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
