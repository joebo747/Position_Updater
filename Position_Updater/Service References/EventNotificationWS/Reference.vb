'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace EventNotificationWS
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", ConfigurationName:="EventNotificationWS.EventNotificationWSSoap")>  _
    Public Interface EventNotificationWSSoap
        
        'CODEGEN: Generating message contract since message GetRecentNotificationsRequest has headers
        <System.ServiceModel.OperationContractAttribute(Action:="http://mixtelematics.com/WebServices/EventNotification/GetRecentNotifications", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(EntityBase))>  _
        Function GetRecentNotifications(ByVal request As EventNotificationWS.GetRecentNotificationsRequest) As EventNotificationWS.GetRecentNotificationsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://mixtelematics.com/WebServices/EventNotification/GetRecentNotifications", ReplyAction:="*")>  _
        Function GetRecentNotificationsAsync(ByVal request As EventNotificationWS.GetRecentNotificationsRequest) As System.Threading.Tasks.Task(Of EventNotificationWS.GetRecentNotificationsResponse)
        
        'CODEGEN: Generating message contract since message GetNotificationsSinceIDRequest has headers
        <System.ServiceModel.OperationContractAttribute(Action:="http://mixtelematics.com/WebServices/EventNotification/GetNotificationsSinceID", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(EntityBase))>  _
        Function GetNotificationsSinceID(ByVal request As EventNotificationWS.GetNotificationsSinceIDRequest) As EventNotificationWS.GetNotificationsSinceIDResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://mixtelematics.com/WebServices/EventNotification/GetNotificationsSinceID", ReplyAction:="*")>  _
        Function GetNotificationsSinceIDAsync(ByVal request As EventNotificationWS.GetNotificationsSinceIDRequest) As System.Threading.Tasks.Task(Of EventNotificationWS.GetNotificationsSinceIDResponse)
        
        'CODEGEN: Generating message contract since message GetNotificationsForVehicleInDateRangeRequest has headers
        <System.ServiceModel.OperationContractAttribute(Action:="http://mixtelematics.com/WebServices/EventNotification/GetNotificationsForVehicle"& _ 
            "InDateRange", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(EntityBase))>  _
        Function GetNotificationsForVehicleInDateRange(ByVal request As EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest) As EventNotificationWS.GetNotificationsForVehicleInDateRangeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://mixtelematics.com/WebServices/EventNotification/GetNotificationsForVehicle"& _ 
            "InDateRange", ReplyAction:="*")>  _
        Function GetNotificationsForVehicleInDateRangeAsync(ByVal request As EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest) As System.Threading.Tasks.Task(Of EventNotificationWS.GetNotificationsForVehicleInDateRangeResponse)
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
    Partial Public Class TokenHeader
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private tokenField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Token() As String
            Get
                Return Me.tokenField
            End Get
            Set
                Me.tokenField = value
                Me.RaisePropertyChanged("Token")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
                Me.RaisePropertyChanged("AnyAttr")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EventNotification)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
    Partial Public MustInherit Class EntityBase
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
    Partial Public Class EventNotification
        Inherits EntityBase
        
        Private priorityField As Byte
        
        Private receivedDateField As Date
        
        Private eventDateField As System.Nullable(Of Date)
        
        Private descriptionField As String
        
        Private vehicleIDField As Short
        
        Private driverIDField As Short
        
        Private eventIDField As Short
        
        Private gPSIDField As System.Nullable(Of Integer)
        
        Private valueField As System.Nullable(Of Single)
        
        Private odometerField As Single
        
        Private speedField As Single
        
        Private isArmedField As Boolean
        
        Private latitudeField As System.Nullable(Of Single)
        
        Private longitudeField As System.Nullable(Of Single)
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Priority() As Byte
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
                Me.RaisePropertyChanged("Priority")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ReceivedDate() As Date
            Get
                Return Me.receivedDateField
            End Get
            Set
                Me.receivedDateField = value
                Me.RaisePropertyChanged("ReceivedDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=2)>  _
        Public Property EventDate() As System.Nullable(Of Date)
            Get
                Return Me.eventDateField
            End Get
            Set
                Me.eventDateField = value
                Me.RaisePropertyChanged("EventDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
                Me.RaisePropertyChanged("Description")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property VehicleID() As Short
            Get
                Return Me.vehicleIDField
            End Get
            Set
                Me.vehicleIDField = value
                Me.RaisePropertyChanged("VehicleID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property DriverID() As Short
            Get
                Return Me.driverIDField
            End Get
            Set
                Me.driverIDField = value
                Me.RaisePropertyChanged("DriverID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property EventID() As Short
            Get
                Return Me.eventIDField
            End Get
            Set
                Me.eventIDField = value
                Me.RaisePropertyChanged("EventID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=7)>  _
        Public Property GPSID() As System.Nullable(Of Integer)
            Get
                Return Me.gPSIDField
            End Get
            Set
                Me.gPSIDField = value
                Me.RaisePropertyChanged("GPSID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=8)>  _
        Public Property Value() As System.Nullable(Of Single)
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
                Me.RaisePropertyChanged("Value")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Odometer() As Single
            Get
                Return Me.odometerField
            End Get
            Set
                Me.odometerField = value
                Me.RaisePropertyChanged("Odometer")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property Speed() As Single
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
                Me.RaisePropertyChanged("Speed")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property IsArmed() As Boolean
            Get
                Return Me.isArmedField
            End Get
            Set
                Me.isArmedField = value
                Me.RaisePropertyChanged("IsArmed")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=12)>  _
        Public Property Latitude() As System.Nullable(Of Single)
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
                Me.RaisePropertyChanged("Latitude")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=13)>  _
        Public Property Longitude() As System.Nullable(Of Single)
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
                Me.RaisePropertyChanged("Longitude")
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetRecentNotifications", WrapperNamespace:="http://mixtelematics.com/WebServices/EventNotification", IsWrapped:=true)>  _
    Partial Public Class GetRecentNotificationsRequest
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
        Public TokenHeader As EventNotificationWS.TokenHeader
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=0)>  _
        Public Count As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=1)>  _
        Public EventIDs As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal Count As Integer, ByVal EventIDs As String)
            MyBase.New
            Me.TokenHeader = TokenHeader
            Me.Count = Count
            Me.EventIDs = EventIDs
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetRecentNotificationsResponse", WrapperNamespace:="http://mixtelematics.com/WebServices/EventNotification", IsWrapped:=true)>  _
    Partial Public Class GetRecentNotificationsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=0)>  _
        Public GetRecentNotificationsResult() As EventNotificationWS.EventNotification
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetRecentNotificationsResult() As EventNotificationWS.EventNotification)
            MyBase.New
            Me.GetRecentNotificationsResult = GetRecentNotificationsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNotificationsSinceID", WrapperNamespace:="http://mixtelematics.com/WebServices/EventNotification", IsWrapped:=true)>  _
    Partial Public Class GetNotificationsSinceIDRequest
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
        Public TokenHeader As EventNotificationWS.TokenHeader
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=0)>  _
        Public ID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=1)>  _
        Public EventIDs As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal ID As Integer, ByVal EventIDs As String)
            MyBase.New
            Me.TokenHeader = TokenHeader
            Me.ID = ID
            Me.EventIDs = EventIDs
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNotificationsSinceIDResponse", WrapperNamespace:="http://mixtelematics.com/WebServices/EventNotification", IsWrapped:=true)>  _
    Partial Public Class GetNotificationsSinceIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=0)>  _
        Public GetNotificationsSinceIDResult() As EventNotificationWS.EventNotification
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetNotificationsSinceIDResult() As EventNotificationWS.EventNotification)
            MyBase.New
            Me.GetNotificationsSinceIDResult = GetNotificationsSinceIDResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNotificationsForVehicleInDateRange", WrapperNamespace:="http://mixtelematics.com/WebServices/EventNotification", IsWrapped:=true)>  _
    Partial Public Class GetNotificationsForVehicleInDateRangeRequest
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
        Public TokenHeader As EventNotificationWS.TokenHeader
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=0)>  _
        Public VehicleID As Short
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=1)>  _
        Public FromDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=2)>  _
        Public ToDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=3)>  _
        Public EventIDs As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal VehicleID As Short, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EventIDs As String)
            MyBase.New
            Me.TokenHeader = TokenHeader
            Me.VehicleID = VehicleID
            Me.FromDate = FromDate
            Me.ToDate = ToDate
            Me.EventIDs = EventIDs
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNotificationsForVehicleInDateRangeResponse", WrapperNamespace:="http://mixtelematics.com/WebServices/EventNotification", IsWrapped:=true)>  _
    Partial Public Class GetNotificationsForVehicleInDateRangeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", Order:=0)>  _
        Public GetNotificationsForVehicleInDateRangeResult() As EventNotificationWS.EventNotification
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetNotificationsForVehicleInDateRangeResult() As EventNotificationWS.EventNotification)
            MyBase.New
            Me.GetNotificationsForVehicleInDateRangeResult = GetNotificationsForVehicleInDateRangeResult
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface EventNotificationWSSoapChannel
        Inherits EventNotificationWS.EventNotificationWSSoap, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class EventNotificationWSSoapClient
        Inherits System.ServiceModel.ClientBase(Of EventNotificationWS.EventNotificationWSSoap)
        Implements EventNotificationWS.EventNotificationWSSoap
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EventNotificationWS_EventNotificationWSSoap_GetRecentNotifications(ByVal request As EventNotificationWS.GetRecentNotificationsRequest) As EventNotificationWS.GetRecentNotificationsResponse Implements EventNotificationWS.EventNotificationWSSoap.GetRecentNotifications
            Return MyBase.Channel.GetRecentNotifications(request)
        End Function
        
        Public Function GetRecentNotifications(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal Count As Integer, ByVal EventIDs As String) As EventNotificationWS.EventNotification()
            Dim inValue As EventNotificationWS.GetRecentNotificationsRequest = New EventNotificationWS.GetRecentNotificationsRequest()
            inValue.TokenHeader = TokenHeader
            inValue.Count = Count
            inValue.EventIDs = EventIDs
            Dim retVal As EventNotificationWS.GetRecentNotificationsResponse = CType(Me,EventNotificationWS.EventNotificationWSSoap).GetRecentNotifications(inValue)
            Return retVal.GetRecentNotificationsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EventNotificationWS_EventNotificationWSSoap_GetRecentNotificationsAsync(ByVal request As EventNotificationWS.GetRecentNotificationsRequest) As System.Threading.Tasks.Task(Of EventNotificationWS.GetRecentNotificationsResponse) Implements EventNotificationWS.EventNotificationWSSoap.GetRecentNotificationsAsync
            Return MyBase.Channel.GetRecentNotificationsAsync(request)
        End Function
        
        Public Function GetRecentNotificationsAsync(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal Count As Integer, ByVal EventIDs As String) As System.Threading.Tasks.Task(Of EventNotificationWS.GetRecentNotificationsResponse)
            Dim inValue As EventNotificationWS.GetRecentNotificationsRequest = New EventNotificationWS.GetRecentNotificationsRequest()
            inValue.TokenHeader = TokenHeader
            inValue.Count = Count
            inValue.EventIDs = EventIDs
            Return CType(Me,EventNotificationWS.EventNotificationWSSoap).GetRecentNotificationsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EventNotificationWS_EventNotificationWSSoap_GetNotificationsSinceID(ByVal request As EventNotificationWS.GetNotificationsSinceIDRequest) As EventNotificationWS.GetNotificationsSinceIDResponse Implements EventNotificationWS.EventNotificationWSSoap.GetNotificationsSinceID
            Return MyBase.Channel.GetNotificationsSinceID(request)
        End Function
        
        Public Function GetNotificationsSinceID(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal ID As Integer, ByVal EventIDs As String) As EventNotificationWS.EventNotification()
            Dim inValue As EventNotificationWS.GetNotificationsSinceIDRequest = New EventNotificationWS.GetNotificationsSinceIDRequest()
            inValue.TokenHeader = TokenHeader
            inValue.ID = ID
            inValue.EventIDs = EventIDs
            Dim retVal As EventNotificationWS.GetNotificationsSinceIDResponse = CType(Me,EventNotificationWS.EventNotificationWSSoap).GetNotificationsSinceID(inValue)
            Return retVal.GetNotificationsSinceIDResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EventNotificationWS_EventNotificationWSSoap_GetNotificationsSinceIDAsync(ByVal request As EventNotificationWS.GetNotificationsSinceIDRequest) As System.Threading.Tasks.Task(Of EventNotificationWS.GetNotificationsSinceIDResponse) Implements EventNotificationWS.EventNotificationWSSoap.GetNotificationsSinceIDAsync
            Return MyBase.Channel.GetNotificationsSinceIDAsync(request)
        End Function
        
        Public Function GetNotificationsSinceIDAsync(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal ID As Integer, ByVal EventIDs As String) As System.Threading.Tasks.Task(Of EventNotificationWS.GetNotificationsSinceIDResponse)
            Dim inValue As EventNotificationWS.GetNotificationsSinceIDRequest = New EventNotificationWS.GetNotificationsSinceIDRequest()
            inValue.TokenHeader = TokenHeader
            inValue.ID = ID
            inValue.EventIDs = EventIDs
            Return CType(Me,EventNotificationWS.EventNotificationWSSoap).GetNotificationsSinceIDAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EventNotificationWS_EventNotificationWSSoap_GetNotificationsForVehicleInDateRange(ByVal request As EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest) As EventNotificationWS.GetNotificationsForVehicleInDateRangeResponse Implements EventNotificationWS.EventNotificationWSSoap.GetNotificationsForVehicleInDateRange
            Return MyBase.Channel.GetNotificationsForVehicleInDateRange(request)
        End Function
        
        Public Function GetNotificationsForVehicleInDateRange(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal VehicleID As Short, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EventIDs As String) As EventNotificationWS.EventNotification()
            Dim inValue As EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest = New EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest()
            inValue.TokenHeader = TokenHeader
            inValue.VehicleID = VehicleID
            inValue.FromDate = FromDate
            inValue.ToDate = ToDate
            inValue.EventIDs = EventIDs
            Dim retVal As EventNotificationWS.GetNotificationsForVehicleInDateRangeResponse = CType(Me,EventNotificationWS.EventNotificationWSSoap).GetNotificationsForVehicleInDateRange(inValue)
            Return retVal.GetNotificationsForVehicleInDateRangeResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EventNotificationWS_EventNotificationWSSoap_GetNotificationsForVehicleInDateRangeAsync(ByVal request As EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest) As System.Threading.Tasks.Task(Of EventNotificationWS.GetNotificationsForVehicleInDateRangeResponse) Implements EventNotificationWS.EventNotificationWSSoap.GetNotificationsForVehicleInDateRangeAsync
            Return MyBase.Channel.GetNotificationsForVehicleInDateRangeAsync(request)
        End Function
        
        Public Function GetNotificationsForVehicleInDateRangeAsync(ByVal TokenHeader As EventNotificationWS.TokenHeader, ByVal VehicleID As Short, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EventIDs As String) As System.Threading.Tasks.Task(Of EventNotificationWS.GetNotificationsForVehicleInDateRangeResponse)
            Dim inValue As EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest = New EventNotificationWS.GetNotificationsForVehicleInDateRangeRequest()
            inValue.TokenHeader = TokenHeader
            inValue.VehicleID = VehicleID
            inValue.FromDate = FromDate
            inValue.ToDate = ToDate
            inValue.EventIDs = EventIDs
            Return CType(Me,EventNotificationWS.EventNotificationWSSoap).GetNotificationsForVehicleInDateRangeAsync(inValue)
        End Function
    End Class
End Namespace
