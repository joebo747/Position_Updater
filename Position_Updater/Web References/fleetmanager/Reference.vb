'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace fleetmanager
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FleetManagerAPISoap", [Namespace]:="http://FleetManagerAPI.bluetree.ie/")>  _
    Partial Public Class FleetManagerAPI
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CreateFuelPurchasedRecord_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleInspectionDetails_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicles_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateVehicle_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteVehicle_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDriverDetails_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDriverDetails_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateDriver_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateDriver_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateDriver_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateDriver_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDriver_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AssignPin_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RevokePin_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCurrentDriverLoginDetails_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDriverAuthenticationEvents_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDriverVehicleHistory_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGpsWithTemperature_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateLocation_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLocation_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLocations_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteLocation_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueEngineStart_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueEngineStop_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueChangeSetpoint_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueSetFridgeOpMode_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueClearAlarms_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueDefrost_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueuePretrip_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueSetIntellisenseProfile_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRCOMDeviceRequestStatus_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoteReeferConfigGetIntellisenseProfiles_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHoSDutyStateChanges_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHoSDriverAvailableHours_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHoSDriversDailyDutyLogSummary_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHoSDriversWithUpdatedDutyLogsSummary_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetTrailerNoForVehicle_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetShippingDocumentNoForVehicle_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTemperatureReadings_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_TemperatureReadings_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFridgeAlarms_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ServiceInfo_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServiceInfo_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicles_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleFolders_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCurrentVehicleStatus_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadAllDataItems_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertDataItems_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadDataItem_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateDataItem_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDataItem_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDataItemGroup_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDataItemFleet_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendRCOMInCabFormMessage_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRCOMInCabIncomingFormMessages_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRCOMInCabOutgoingFormMessages_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFormDefinitions_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFormDefinition_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRCOMInCabStops_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRCOMInCabStops_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRCOMInCabTrips_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateIncomingInCabMessage_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLiveTachographEvents_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestVehicleReadings_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPTOEvents_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleStops_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_GPSReadings_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGPSReadings_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGpsReadingsForVehicle_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFMSTrips_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFMSHarshBrakes_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCurrentDataTerminalStatus_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleWorkingSummary_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleActivities_v1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Position_Updater.My.MySettings.Default.Position_Updater_fleetmanager_FleetManagerAPI
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateFuelPurchasedRecord_v1Completed As CreateFuelPurchasedRecord_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleInspectionDetails_v1Completed As GetVehicleInspectionDetails_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicles_v2Completed As GetVehicles_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateVehicle_v1Completed As CreateVehicle_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteVehicle_v1Completed As DeleteVehicle_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDriverDetails_v1Completed As GetDriverDetails_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDriverDetails_v2Completed As GetDriverDetails_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateDriver_v1Completed As CreateDriver_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateDriver_v2Completed As CreateDriver_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateDriver_v1Completed As UpdateDriver_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateDriver_v2Completed As UpdateDriver_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDriver_v1Completed As DeleteDriver_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event AssignPin_v1Completed As AssignPin_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RevokePin_v1Completed As RevokePin_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetCurrentDriverLoginDetails_v1Completed As GetCurrentDriverLoginDetails_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDriverAuthenticationEvents_v1Completed As GetDriverAuthenticationEvents_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDriverVehicleHistory_v1Completed As GetDriverVehicleHistory_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetGpsWithTemperature_v1Completed As GetGpsWithTemperature_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateLocation_v1Completed As CreateLocation_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLocation_v1Completed As UpdateLocation_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetLocations_v1Completed As GetLocations_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteLocation_v1Completed As DeleteLocation_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueEngineStart_v1Completed As RemoteReeferConfigQueueEngineStart_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueEngineStop_v1Completed As RemoteReeferConfigQueueEngineStop_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueChangeSetpoint_v1Completed As RemoteReeferConfigQueueChangeSetpoint_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueSetFridgeOpMode_v1Completed As RemoteReeferConfigQueueSetFridgeOpMode_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueClearAlarms_v1Completed As RemoteReeferConfigQueueClearAlarms_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueDefrost_v1Completed As RemoteReeferConfigQueueDefrost_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueuePretrip_v1Completed As RemoteReeferConfigQueuePretrip_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueSetIntellisenseProfile_v1Completed As RemoteReeferConfigQueueSetIntellisenseProfile_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1Completed As RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetRCOMDeviceRequestStatus_v1Completed As GetRCOMDeviceRequestStatus_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event RemoteReeferConfigGetIntellisenseProfiles_v1Completed As RemoteReeferConfigGetIntellisenseProfiles_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetHoSDutyStateChanges_v1Completed As GetHoSDutyStateChanges_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetHoSDriverAvailableHours_v1Completed As GetHoSDriverAvailableHours_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetHoSDriversDailyDutyLogSummary_v1Completed As GetHoSDriversDailyDutyLogSummary_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetHoSDriversWithUpdatedDutyLogsSummary_v1Completed As GetHoSDriversWithUpdatedDutyLogsSummary_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event SetTrailerNoForVehicle_v1Completed As SetTrailerNoForVehicle_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event SetShippingDocumentNoForVehicle_v1Completed As SetShippingDocumentNoForVehicle_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetTemperatureReadings_v1Completed As GetTemperatureReadings_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event Get_TemperatureReadings_v1Completed As Get_TemperatureReadings_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetFridgeAlarms_v1Completed As GetFridgeAlarms_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ServiceInfo_v1Completed As Get_ServiceInfo_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetServiceInfo_v1Completed As GetServiceInfo_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicles_v1Completed As GetVehicles_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleFolders_v1Completed As GetVehicleFolders_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetCurrentVehicleStatus_v1Completed As GetCurrentVehicleStatus_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event ReadAllDataItems_v1Completed As ReadAllDataItems_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event InsertDataItems_v1Completed As InsertDataItems_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event ReadDataItem_v1Completed As ReadDataItem_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateDataItem_v1Completed As UpdateDataItem_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDataItem_v1Completed As DeleteDataItem_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event AddDataItemGroup_v1Completed As AddDataItemGroup_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event AddDataItemFleet_v1Completed As AddDataItemFleet_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event SendRCOMInCabFormMessage_v1Completed As SendRCOMInCabFormMessage_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetRCOMInCabIncomingFormMessages_v1Completed As GetRCOMInCabIncomingFormMessages_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetRCOMInCabOutgoingFormMessages_v1Completed As GetRCOMInCabOutgoingFormMessages_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetFormDefinitions_v1Completed As GetFormDefinitions_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event AddFormDefinition_v1Completed As AddFormDefinition_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetRCOMInCabStops_v1Completed As GetRCOMInCabStops_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetRCOMInCabStops_v2Completed As GetRCOMInCabStops_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetRCOMInCabTrips_v1Completed As GetRCOMInCabTrips_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateIncomingInCabMessage_v1Completed As CreateIncomingInCabMessage_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetLiveTachographEvents_v1Completed As GetLiveTachographEvents_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestVehicleReadings_v1Completed As GetLatestVehicleReadings_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetPTOEvents_v1Completed As GetPTOEvents_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleStops_v1Completed As GetVehicleStops_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event Get_GPSReadings_v1Completed As Get_GPSReadings_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetGPSReadings_v1Completed As GetGPSReadings_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetGpsReadingsForVehicle_v1Completed As GetGpsReadingsForVehicle_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetFMSTrips_v1Completed As GetFMSTrips_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetFMSHarshBrakes_v1Completed As GetFMSHarshBrakes_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetCurrentDataTerminalStatus_v1Completed As GetCurrentDataTerminalStatus_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleWorkingSummary_v1Completed As GetVehicleWorkingSummary_v1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleActivities_v1Completed As GetVehicleActivities_v1CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/CreateFuelPurchasedRecord_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateFuelPurchasedRecord_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timeStamp As Date, ByVal amount As Single, ByVal fuelTypeID As Integer, ByVal locationDescription As String, ByVal userData As String, ByVal juristiction As String, ByVal countryISO As String, ByVal replaceExisting As Boolean, ByRef errorMessage As String) As String
            Dim results() As Object = Me.Invoke("CreateFuelPurchasedRecord_v1", New Object() {usn, pwd, options, vehicleID, timeStamp, amount, fuelTypeID, locationDescription, userData, juristiction, countryISO, replaceExisting})
            errorMessage = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateFuelPurchasedRecord_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timeStamp As Date, ByVal amount As Single, ByVal fuelTypeID As Integer, ByVal locationDescription As String, ByVal userData As String, ByVal juristiction As String, ByVal countryISO As String, ByVal replaceExisting As Boolean)
            Me.CreateFuelPurchasedRecord_v1Async(usn, pwd, options, vehicleID, timeStamp, amount, fuelTypeID, locationDescription, userData, juristiction, countryISO, replaceExisting, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateFuelPurchasedRecord_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timeStamp As Date, ByVal amount As Single, ByVal fuelTypeID As Integer, ByVal locationDescription As String, ByVal userData As String, ByVal juristiction As String, ByVal countryISO As String, ByVal replaceExisting As Boolean, ByVal userState As Object)
            If (Me.CreateFuelPurchasedRecord_v1OperationCompleted Is Nothing) Then
                Me.CreateFuelPurchasedRecord_v1OperationCompleted = AddressOf Me.OnCreateFuelPurchasedRecord_v1OperationCompleted
            End If
            Me.InvokeAsync("CreateFuelPurchasedRecord_v1", New Object() {usn, pwd, options, vehicleID, timeStamp, amount, fuelTypeID, locationDescription, userData, juristiction, countryISO, replaceExisting}, Me.CreateFuelPurchasedRecord_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateFuelPurchasedRecord_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateFuelPurchasedRecord_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateFuelPurchasedRecord_v1Completed(Me, New CreateFuelPurchasedRecord_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicleInspectionDetails_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleInspectionDetails_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetVehicleInspectionDetails_v1", New Object() {usn, pwd, columns, options, generationNumber, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleInspectionDetails_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByVal requestedNumRows As Integer)
            Me.GetVehicleInspectionDetails_v1Async(usn, pwd, columns, options, generationNumber, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleInspectionDetails_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetVehicleInspectionDetails_v1OperationCompleted Is Nothing) Then
                Me.GetVehicleInspectionDetails_v1OperationCompleted = AddressOf Me.OnGetVehicleInspectionDetails_v1OperationCompleted
            End If
            Me.InvokeAsync("GetVehicleInspectionDetails_v1", New Object() {usn, pwd, columns, options, generationNumber, requestedNumRows}, Me.GetVehicleInspectionDetails_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleInspectionDetails_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleInspectionDetails_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleInspectionDetails_v1Completed(Me, New GetVehicleInspectionDetails_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicles_v2", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicles_v2(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetVehicles_v2", New Object() {usn, pwd, columns, options, generationNumber})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicles_v2Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long)
            Me.GetVehicles_v2Async(usn, pwd, columns, options, generationNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicles_v2Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByVal userState As Object)
            If (Me.GetVehicles_v2OperationCompleted Is Nothing) Then
                Me.GetVehicles_v2OperationCompleted = AddressOf Me.OnGetVehicles_v2OperationCompleted
            End If
            Me.InvokeAsync("GetVehicles_v2", New Object() {usn, pwd, columns, options, generationNumber}, Me.GetVehicles_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicles_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicles_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicles_v2Completed(Me, New GetVehicles_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/CreateVehicle_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateVehicle_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleName As String, ByVal vehicleType As Integer, ByVal vehicleFolderName As String, ByRef errorMsg As String, ByRef vehicleID As Long) As String
            Dim results() As Object = Me.Invoke("CreateVehicle_v1", New Object() {usn, pwd, options, vehicleName, vehicleType, vehicleFolderName})
            errorMsg = CType(results(1),String)
            vehicleID = CType(results(2),Long)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleName As String, ByVal vehicleType As Integer, ByVal vehicleFolderName As String)
            Me.CreateVehicle_v1Async(usn, pwd, options, vehicleName, vehicleType, vehicleFolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleName As String, ByVal vehicleType As Integer, ByVal vehicleFolderName As String, ByVal userState As Object)
            If (Me.CreateVehicle_v1OperationCompleted Is Nothing) Then
                Me.CreateVehicle_v1OperationCompleted = AddressOf Me.OnCreateVehicle_v1OperationCompleted
            End If
            Me.InvokeAsync("CreateVehicle_v1", New Object() {usn, pwd, options, vehicleName, vehicleType, vehicleFolderName}, Me.CreateVehicle_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateVehicle_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateVehicle_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateVehicle_v1Completed(Me, New CreateVehicle_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/DeleteVehicle_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteVehicle_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("DeleteVehicle_v1", New Object() {usn, pwd, options, vehicleID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer)
            Me.DeleteVehicle_v1Async(usn, pwd, options, vehicleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal userState As Object)
            If (Me.DeleteVehicle_v1OperationCompleted Is Nothing) Then
                Me.DeleteVehicle_v1OperationCompleted = AddressOf Me.OnDeleteVehicle_v1OperationCompleted
            End If
            Me.InvokeAsync("DeleteVehicle_v1", New Object() {usn, pwd, options, vehicleID}, Me.DeleteVehicle_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteVehicle_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteVehicle_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteVehicle_v1Completed(Me, New DeleteVehicle_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetDriverDetails_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDriverDetails_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetDriverDetails_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDriverDetails_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetDriverDetails_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDriverDetails_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetDriverDetails_v1OperationCompleted Is Nothing) Then
                Me.GetDriverDetails_v1OperationCompleted = AddressOf Me.OnGetDriverDetails_v1OperationCompleted
            End If
            Me.InvokeAsync("GetDriverDetails_v1", New Object() {usn, pwd, columns, options}, Me.GetDriverDetails_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDriverDetails_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDriverDetails_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDriverDetails_v1Completed(Me, New GetDriverDetails_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetDriverDetails_v2", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDriverDetails_v2(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetDriverDetails_v2", New Object() {usn, pwd, columns, options, generationNumber})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDriverDetails_v2Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long)
            Me.GetDriverDetails_v2Async(usn, pwd, columns, options, generationNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDriverDetails_v2Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal generationNumber As Long, ByVal userState As Object)
            If (Me.GetDriverDetails_v2OperationCompleted Is Nothing) Then
                Me.GetDriverDetails_v2OperationCompleted = AddressOf Me.OnGetDriverDetails_v2OperationCompleted
            End If
            Me.InvokeAsync("GetDriverDetails_v2", New Object() {usn, pwd, columns, options, generationNumber}, Me.GetDriverDetails_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDriverDetails_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDriverDetails_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDriverDetails_v2Completed(Me, New GetDriverDetails_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/CreateDriver_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDriver_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal name As String, ByVal firstName As String, ByVal surname As String, ByVal telephoneNumber As String, ByVal employeeNumber As String, ByVal driverFolderName As String, ByRef driverID As Integer, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("CreateDriver_v1", New Object() {usn, pwd, options, name, firstName, surname, telephoneNumber, employeeNumber, driverFolderName})
            driverID = CType(results(1),Integer)
            errorMsg = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDriver_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal name As String, ByVal firstName As String, ByVal surname As String, ByVal telephoneNumber As String, ByVal employeeNumber As String, ByVal driverFolderName As String)
            Me.CreateDriver_v1Async(usn, pwd, options, name, firstName, surname, telephoneNumber, employeeNumber, driverFolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDriver_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal name As String, ByVal firstName As String, ByVal surname As String, ByVal telephoneNumber As String, ByVal employeeNumber As String, ByVal driverFolderName As String, ByVal userState As Object)
            If (Me.CreateDriver_v1OperationCompleted Is Nothing) Then
                Me.CreateDriver_v1OperationCompleted = AddressOf Me.OnCreateDriver_v1OperationCompleted
            End If
            Me.InvokeAsync("CreateDriver_v1", New Object() {usn, pwd, options, name, firstName, surname, telephoneNumber, employeeNumber, driverFolderName}, Me.CreateDriver_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDriver_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDriver_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDriver_v1Completed(Me, New CreateDriver_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/CreateDriver_v2", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDriver_v2( _
                    ByVal usn As String,  _
                    ByVal pwd As String,  _
                    ByVal options As String,  _
                    ByVal name As String,  _
                    ByVal firstName As String,  _
                    ByVal surname As String,  _
                    ByVal dateOfBirth As Date,  _
                    ByVal telephoneNumber As String,  _
                    ByVal emailAddress As String,  _
                    ByVal employeeNumber As String,  _
                    ByVal driverFolderName As String,  _
                    ByVal driverLicenceNumber As String,  _
                    ByVal licenceIssued As Date,  _
                    ByVal licenceExpiry As Date,  _
                    ByVal driverLicenceStateCode As String,  _
                    ByVal driverCountryCode As String,  _
                    ByRef driverID As Integer,  _
                    ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("CreateDriver_v2", New Object() {usn, pwd, options, name, firstName, surname, dateOfBirth, telephoneNumber, emailAddress, employeeNumber, driverFolderName, driverLicenceNumber, licenceIssued, licenceExpiry, driverLicenceStateCode, driverCountryCode})
            driverID = CType(results(1),Integer)
            errorMsg = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDriver_v2Async( _
                    ByVal usn As String,  _
                    ByVal pwd As String,  _
                    ByVal options As String,  _
                    ByVal name As String,  _
                    ByVal firstName As String,  _
                    ByVal surname As String,  _
                    ByVal dateOfBirth As Date,  _
                    ByVal telephoneNumber As String,  _
                    ByVal emailAddress As String,  _
                    ByVal employeeNumber As String,  _
                    ByVal driverFolderName As String,  _
                    ByVal driverLicenceNumber As String,  _
                    ByVal licenceIssued As Date,  _
                    ByVal licenceExpiry As Date,  _
                    ByVal driverLicenceStateCode As String,  _
                    ByVal driverCountryCode As String)
            Me.CreateDriver_v2Async(usn, pwd, options, name, firstName, surname, dateOfBirth, telephoneNumber, emailAddress, employeeNumber, driverFolderName, driverLicenceNumber, licenceIssued, licenceExpiry, driverLicenceStateCode, driverCountryCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDriver_v2Async( _
                    ByVal usn As String,  _
                    ByVal pwd As String,  _
                    ByVal options As String,  _
                    ByVal name As String,  _
                    ByVal firstName As String,  _
                    ByVal surname As String,  _
                    ByVal dateOfBirth As Date,  _
                    ByVal telephoneNumber As String,  _
                    ByVal emailAddress As String,  _
                    ByVal employeeNumber As String,  _
                    ByVal driverFolderName As String,  _
                    ByVal driverLicenceNumber As String,  _
                    ByVal licenceIssued As Date,  _
                    ByVal licenceExpiry As Date,  _
                    ByVal driverLicenceStateCode As String,  _
                    ByVal driverCountryCode As String,  _
                    ByVal userState As Object)
            If (Me.CreateDriver_v2OperationCompleted Is Nothing) Then
                Me.CreateDriver_v2OperationCompleted = AddressOf Me.OnCreateDriver_v2OperationCompleted
            End If
            Me.InvokeAsync("CreateDriver_v2", New Object() {usn, pwd, options, name, firstName, surname, dateOfBirth, telephoneNumber, emailAddress, employeeNumber, driverFolderName, driverLicenceNumber, licenceIssued, licenceExpiry, driverLicenceStateCode, driverCountryCode}, Me.CreateDriver_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDriver_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDriver_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDriver_v2Completed(Me, New CreateDriver_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/UpdateDriver_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateDriver_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal name As String, ByVal firstName As String, ByVal surname As String, ByVal telephoneNumber As String, ByVal employeeNumber As String, ByVal driverFolderName As String) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("UpdateDriver_v1", New Object() {usn, pwd, options, driverID, name, firstName, surname, telephoneNumber, employeeNumber, driverFolderName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateDriver_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal name As String, ByVal firstName As String, ByVal surname As String, ByVal telephoneNumber As String, ByVal employeeNumber As String, ByVal driverFolderName As String)
            Me.UpdateDriver_v1Async(usn, pwd, options, driverID, name, firstName, surname, telephoneNumber, employeeNumber, driverFolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDriver_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal name As String, ByVal firstName As String, ByVal surname As String, ByVal telephoneNumber As String, ByVal employeeNumber As String, ByVal driverFolderName As String, ByVal userState As Object)
            If (Me.UpdateDriver_v1OperationCompleted Is Nothing) Then
                Me.UpdateDriver_v1OperationCompleted = AddressOf Me.OnUpdateDriver_v1OperationCompleted
            End If
            Me.InvokeAsync("UpdateDriver_v1", New Object() {usn, pwd, options, driverID, name, firstName, surname, telephoneNumber, employeeNumber, driverFolderName}, Me.UpdateDriver_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateDriver_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateDriver_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateDriver_v1Completed(Me, New UpdateDriver_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/UpdateDriver_v2", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateDriver_v2( _
                    ByVal usn As String,  _
                    ByVal pwd As String,  _
                    ByVal options As String,  _
                    ByVal driverID As Integer,  _
                    ByVal name As String,  _
                    ByVal firstName As String,  _
                    ByVal surname As String,  _
                    ByVal dateOfBirth As Date,  _
                    ByVal telephoneNumber As String,  _
                    ByVal emailAddress As String,  _
                    ByVal employeeNumber As String,  _
                    ByVal driverFolderName As String,  _
                    ByVal driverLicenceNumber As String,  _
                    ByVal licenceIssued As Date,  _
                    ByVal licenceExpiry As Date,  _
                    ByVal driverLicenceStateCode As String,  _
                    ByVal driverCountryCode As String) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("UpdateDriver_v2", New Object() {usn, pwd, options, driverID, name, firstName, surname, dateOfBirth, telephoneNumber, emailAddress, employeeNumber, driverFolderName, driverLicenceNumber, licenceIssued, licenceExpiry, driverLicenceStateCode, driverCountryCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateDriver_v2Async( _
                    ByVal usn As String,  _
                    ByVal pwd As String,  _
                    ByVal options As String,  _
                    ByVal driverID As Integer,  _
                    ByVal name As String,  _
                    ByVal firstName As String,  _
                    ByVal surname As String,  _
                    ByVal dateOfBirth As Date,  _
                    ByVal telephoneNumber As String,  _
                    ByVal emailAddress As String,  _
                    ByVal employeeNumber As String,  _
                    ByVal driverFolderName As String,  _
                    ByVal driverLicenceNumber As String,  _
                    ByVal licenceIssued As Date,  _
                    ByVal licenceExpiry As Date,  _
                    ByVal driverLicenceStateCode As String,  _
                    ByVal driverCountryCode As String)
            Me.UpdateDriver_v2Async(usn, pwd, options, driverID, name, firstName, surname, dateOfBirth, telephoneNumber, emailAddress, employeeNumber, driverFolderName, driverLicenceNumber, licenceIssued, licenceExpiry, driverLicenceStateCode, driverCountryCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDriver_v2Async( _
                    ByVal usn As String,  _
                    ByVal pwd As String,  _
                    ByVal options As String,  _
                    ByVal driverID As Integer,  _
                    ByVal name As String,  _
                    ByVal firstName As String,  _
                    ByVal surname As String,  _
                    ByVal dateOfBirth As Date,  _
                    ByVal telephoneNumber As String,  _
                    ByVal emailAddress As String,  _
                    ByVal employeeNumber As String,  _
                    ByVal driverFolderName As String,  _
                    ByVal driverLicenceNumber As String,  _
                    ByVal licenceIssued As Date,  _
                    ByVal licenceExpiry As Date,  _
                    ByVal driverLicenceStateCode As String,  _
                    ByVal driverCountryCode As String,  _
                    ByVal userState As Object)
            If (Me.UpdateDriver_v2OperationCompleted Is Nothing) Then
                Me.UpdateDriver_v2OperationCompleted = AddressOf Me.OnUpdateDriver_v2OperationCompleted
            End If
            Me.InvokeAsync("UpdateDriver_v2", New Object() {usn, pwd, options, driverID, name, firstName, surname, dateOfBirth, telephoneNumber, emailAddress, employeeNumber, driverFolderName, driverLicenceNumber, licenceIssued, licenceExpiry, driverLicenceStateCode, driverCountryCode}, Me.UpdateDriver_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateDriver_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateDriver_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateDriver_v2Completed(Me, New UpdateDriver_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/DeleteDriver_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDriver_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("DeleteDriver_v1", New Object() {usn, pwd, options, driverID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDriver_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer)
            Me.DeleteDriver_v1Async(usn, pwd, options, driverID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDriver_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal userState As Object)
            If (Me.DeleteDriver_v1OperationCompleted Is Nothing) Then
                Me.DeleteDriver_v1OperationCompleted = AddressOf Me.OnDeleteDriver_v1OperationCompleted
            End If
            Me.InvokeAsync("DeleteDriver_v1", New Object() {usn, pwd, options, driverID}, Me.DeleteDriver_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDriver_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDriver_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDriver_v1Completed(Me, New DeleteDriver_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/AssignPin_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AssignPin_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal pin As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("AssignPin_v1", New Object() {usn, pwd, options, driverID, pin})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AssignPin_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal pin As String)
            Me.AssignPin_v1Async(usn, pwd, options, driverID, pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignPin_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal pin As String, ByVal userState As Object)
            If (Me.AssignPin_v1OperationCompleted Is Nothing) Then
                Me.AssignPin_v1OperationCompleted = AddressOf Me.OnAssignPin_v1OperationCompleted
            End If
            Me.InvokeAsync("AssignPin_v1", New Object() {usn, pwd, options, driverID, pin}, Me.AssignPin_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnAssignPin_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.AssignPin_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AssignPin_v1Completed(Me, New AssignPin_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RevokePin_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RevokePin_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("RevokePin_v1", New Object() {usn, pwd, options, driverID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RevokePin_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer)
            Me.RevokePin_v1Async(usn, pwd, options, driverID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevokePin_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal driverID As Integer, ByVal userState As Object)
            If (Me.RevokePin_v1OperationCompleted Is Nothing) Then
                Me.RevokePin_v1OperationCompleted = AddressOf Me.OnRevokePin_v1OperationCompleted
            End If
            Me.InvokeAsync("RevokePin_v1", New Object() {usn, pwd, options, driverID}, Me.RevokePin_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRevokePin_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RevokePin_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RevokePin_v1Completed(Me, New RevokePin_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetCurrentDriverLoginDetails_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCurrentDriverLoginDetails_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetCurrentDriverLoginDetails_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCurrentDriverLoginDetails_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetCurrentDriverLoginDetails_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCurrentDriverLoginDetails_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetCurrentDriverLoginDetails_v1OperationCompleted Is Nothing) Then
                Me.GetCurrentDriverLoginDetails_v1OperationCompleted = AddressOf Me.OnGetCurrentDriverLoginDetails_v1OperationCompleted
            End If
            Me.InvokeAsync("GetCurrentDriverLoginDetails_v1", New Object() {usn, pwd, columns, options}, Me.GetCurrentDriverLoginDetails_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCurrentDriverLoginDetails_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCurrentDriverLoginDetails_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCurrentDriverLoginDetails_v1Completed(Me, New GetCurrentDriverLoginDetails_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetDriverAuthenticationEvents_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDriverAuthenticationEvents_v1(ByVal usn As String, ByVal pwd As String, ByVal recordTimeStamp As Date, ByVal columns() As String, ByVal options As String, ByRef lastRecordTimeStamp As Date, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetDriverAuthenticationEvents_v1", New Object() {usn, pwd, recordTimeStamp, columns, options})
            lastRecordTimeStamp = CType(results(1),Date)
            errorMsg = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDriverAuthenticationEvents_v1Async(ByVal usn As String, ByVal pwd As String, ByVal recordTimeStamp As Date, ByVal columns() As String, ByVal options As String)
            Me.GetDriverAuthenticationEvents_v1Async(usn, pwd, recordTimeStamp, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDriverAuthenticationEvents_v1Async(ByVal usn As String, ByVal pwd As String, ByVal recordTimeStamp As Date, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetDriverAuthenticationEvents_v1OperationCompleted Is Nothing) Then
                Me.GetDriverAuthenticationEvents_v1OperationCompleted = AddressOf Me.OnGetDriverAuthenticationEvents_v1OperationCompleted
            End If
            Me.InvokeAsync("GetDriverAuthenticationEvents_v1", New Object() {usn, pwd, recordTimeStamp, columns, options}, Me.GetDriverAuthenticationEvents_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDriverAuthenticationEvents_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDriverAuthenticationEvents_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDriverAuthenticationEvents_v1Completed(Me, New GetDriverAuthenticationEvents_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetDriverVehicleHistory_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDriverVehicleHistory_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestFromTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetDriverVehicleHistory_v1", New Object() {usn, pwd, columns, options, earliestFromTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDriverVehicleHistory_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestFromTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetDriverVehicleHistory_v1Async(usn, pwd, columns, options, earliestFromTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDriverVehicleHistory_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestFromTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetDriverVehicleHistory_v1OperationCompleted Is Nothing) Then
                Me.GetDriverVehicleHistory_v1OperationCompleted = AddressOf Me.OnGetDriverVehicleHistory_v1OperationCompleted
            End If
            Me.InvokeAsync("GetDriverVehicleHistory_v1", New Object() {usn, pwd, columns, options, earliestFromTime, startPointGeneration, requestedNumRows}, Me.GetDriverVehicleHistory_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDriverVehicleHistory_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDriverVehicleHistory_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDriverVehicleHistory_v1Completed(Me, New GetDriverVehicleHistory_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetGpsWithTemperature_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGpsWithTemperature_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal requestedRowNumber As Integer, ByVal vehicleId As Integer, ByVal fromTime As Date, ByVal toTime As Date, ByRef lastTimeStamp As Date, ByRef errorMsg As String, ByRef adjustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("GetGpsWithTemperature_v1", New Object() {usn, pwd, options, requestedRowNumber, vehicleId, fromTime, toTime})
            lastTimeStamp = CType(results(1),Date)
            errorMsg = CType(results(2),String)
            adjustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGpsWithTemperature_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal requestedRowNumber As Integer, ByVal vehicleId As Integer, ByVal fromTime As Date, ByVal toTime As Date)
            Me.GetGpsWithTemperature_v1Async(usn, pwd, options, requestedRowNumber, vehicleId, fromTime, toTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGpsWithTemperature_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal requestedRowNumber As Integer, ByVal vehicleId As Integer, ByVal fromTime As Date, ByVal toTime As Date, ByVal userState As Object)
            If (Me.GetGpsWithTemperature_v1OperationCompleted Is Nothing) Then
                Me.GetGpsWithTemperature_v1OperationCompleted = AddressOf Me.OnGetGpsWithTemperature_v1OperationCompleted
            End If
            Me.InvokeAsync("GetGpsWithTemperature_v1", New Object() {usn, pwd, options, requestedRowNumber, vehicleId, fromTime, toTime}, Me.GetGpsWithTemperature_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGpsWithTemperature_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGpsWithTemperature_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGpsWithTemperature_v1Completed(Me, New GetGpsWithTemperature_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/CreateLocation_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateLocation_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationName As String, ByVal userData As String, ByVal categoryName As String, ByVal polygon As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("CreateLocation_v1", New Object() {usn, pwd, options, locationName, userData, categoryName, polygon})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateLocation_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationName As String, ByVal userData As String, ByVal categoryName As String, ByVal polygon As String)
            Me.CreateLocation_v1Async(usn, pwd, options, locationName, userData, categoryName, polygon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateLocation_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationName As String, ByVal userData As String, ByVal categoryName As String, ByVal polygon As String, ByVal userState As Object)
            If (Me.CreateLocation_v1OperationCompleted Is Nothing) Then
                Me.CreateLocation_v1OperationCompleted = AddressOf Me.OnCreateLocation_v1OperationCompleted
            End If
            Me.InvokeAsync("CreateLocation_v1", New Object() {usn, pwd, options, locationName, userData, categoryName, polygon}, Me.CreateLocation_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateLocation_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateLocation_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateLocation_v1Completed(Me, New CreateLocation_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/UpdateLocation_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLocation_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationId As Integer, ByVal locationName As String, ByVal userData As String, ByVal categoryName As String, ByVal polygon As String) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("UpdateLocation_v1", New Object() {usn, pwd, options, locationId, locationName, userData, categoryName, polygon})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLocation_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationId As Integer, ByVal locationName As String, ByVal userData As String, ByVal categoryName As String, ByVal polygon As String)
            Me.UpdateLocation_v1Async(usn, pwd, options, locationId, locationName, userData, categoryName, polygon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLocation_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationId As Integer, ByVal locationName As String, ByVal userData As String, ByVal categoryName As String, ByVal polygon As String, ByVal userState As Object)
            If (Me.UpdateLocation_v1OperationCompleted Is Nothing) Then
                Me.UpdateLocation_v1OperationCompleted = AddressOf Me.OnUpdateLocation_v1OperationCompleted
            End If
            Me.InvokeAsync("UpdateLocation_v1", New Object() {usn, pwd, options, locationId, locationName, userData, categoryName, polygon}, Me.UpdateLocation_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLocation_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLocation_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLocation_v1Completed(Me, New UpdateLocation_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetLocations_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocations_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal generationNumber As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetLocations_v1", New Object() {usn, pwd, options, generationNumber, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLocations_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal generationNumber As Long, ByVal requestedNumRows As Integer)
            Me.GetLocations_v1Async(usn, pwd, options, generationNumber, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLocations_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal generationNumber As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetLocations_v1OperationCompleted Is Nothing) Then
                Me.GetLocations_v1OperationCompleted = AddressOf Me.OnGetLocations_v1OperationCompleted
            End If
            Me.InvokeAsync("GetLocations_v1", New Object() {usn, pwd, options, generationNumber, requestedNumRows}, Me.GetLocations_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLocations_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLocations_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLocations_v1Completed(Me, New GetLocations_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/DeleteLocation_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteLocation_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationId As Integer) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("DeleteLocation_v1", New Object() {usn, pwd, options, locationId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteLocation_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationId As Integer)
            Me.DeleteLocation_v1Async(usn, pwd, options, locationId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteLocation_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal locationId As Integer, ByVal userState As Object)
            If (Me.DeleteLocation_v1OperationCompleted Is Nothing) Then
                Me.DeleteLocation_v1OperationCompleted = AddressOf Me.OnDeleteLocation_v1OperationCompleted
            End If
            Me.InvokeAsync("DeleteLocation_v1", New Object() {usn, pwd, options, locationId}, Me.DeleteLocation_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteLocation_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteLocation_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteLocation_v1Completed(Me, New DeleteLocation_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueEngineStart_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueEngineStart_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueEngineStart_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueEngineStart_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueEngineStart_v1Async(usn, pwd, permissionToken, vehicleId, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueEngineStart_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueEngineStart_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueEngineStart_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueEngineStart_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueEngineStart_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options}, Me.RemoteReeferConfigQueueEngineStart_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueEngineStart_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueEngineStart_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueEngineStart_v1Completed(Me, New RemoteReeferConfigQueueEngineStart_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueEngineStop_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueEngineStop_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueEngineStop_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueEngineStop_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueEngineStop_v1Async(usn, pwd, permissionToken, vehicleId, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueEngineStop_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueEngineStop_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueEngineStop_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueEngineStop_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueEngineStop_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options}, Me.RemoteReeferConfigQueueEngineStop_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueEngineStop_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueEngineStop_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueEngineStop_v1Completed(Me, New RemoteReeferConfigQueueEngineStop_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueChangeSetpoint_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueChangeSetpoint_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal zone As Integer, ByVal setpoint As Double, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueChangeSetpoint_v1", New Object() {usn, pwd, permissionToken, vehicleId, zone, setpoint, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueChangeSetpoint_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal zone As Integer, ByVal setpoint As Double, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueChangeSetpoint_v1Async(usn, pwd, permissionToken, vehicleId, zone, setpoint, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueChangeSetpoint_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal zone As Integer, ByVal setpoint As Double, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueChangeSetpoint_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueChangeSetpoint_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueChangeSetpoint_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueChangeSetpoint_v1", New Object() {usn, pwd, permissionToken, vehicleId, zone, setpoint, expiryTime, options}, Me.RemoteReeferConfigQueueChangeSetpoint_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueChangeSetpoint_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueChangeSetpoint_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueChangeSetpoint_v1Completed(Me, New RemoteReeferConfigQueueChangeSetpoint_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueSetFridgeOpMode_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueSetFridgeOpMode_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal opMode As ReeferOpMode, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueSetFridgeOpMode_v1", New Object() {usn, pwd, permissionToken, vehicleId, opMode, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueSetFridgeOpMode_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal opMode As ReeferOpMode, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueSetFridgeOpMode_v1Async(usn, pwd, permissionToken, vehicleId, opMode, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueSetFridgeOpMode_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal opMode As ReeferOpMode, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueSetFridgeOpMode_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueSetFridgeOpMode_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueSetFridgeOpMode_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueSetFridgeOpMode_v1", New Object() {usn, pwd, permissionToken, vehicleId, opMode, expiryTime, options}, Me.RemoteReeferConfigQueueSetFridgeOpMode_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueSetFridgeOpMode_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueSetFridgeOpMode_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueSetFridgeOpMode_v1Completed(Me, New RemoteReeferConfigQueueSetFridgeOpMode_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueClearAlarms_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueClearAlarms_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal clearActiveOnly As Boolean, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueClearAlarms_v1", New Object() {usn, pwd, permissionToken, vehicleId, clearActiveOnly, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueClearAlarms_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal clearActiveOnly As Boolean, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueClearAlarms_v1Async(usn, pwd, permissionToken, vehicleId, clearActiveOnly, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueClearAlarms_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal clearActiveOnly As Boolean, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueClearAlarms_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueClearAlarms_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueClearAlarms_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueClearAlarms_v1", New Object() {usn, pwd, permissionToken, vehicleId, clearActiveOnly, expiryTime, options}, Me.RemoteReeferConfigQueueClearAlarms_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueClearAlarms_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueClearAlarms_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueClearAlarms_v1Completed(Me, New RemoteReeferConfigQueueClearAlarms_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueDefrost_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueDefrost_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal zone As Integer, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueDefrost_v1", New Object() {usn, pwd, permissionToken, vehicleId, zone, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueDefrost_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal zone As Integer, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueDefrost_v1Async(usn, pwd, permissionToken, vehicleId, zone, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueDefrost_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal zone As Integer, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueDefrost_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueDefrost_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueDefrost_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueDefrost_v1", New Object() {usn, pwd, permissionToken, vehicleId, zone, expiryTime, options}, Me.RemoteReeferConfigQueueDefrost_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueDefrost_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueDefrost_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueDefrost_v1Completed(Me, New RemoteReeferConfigQueueDefrost_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueuePretrip_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueuePretrip_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueuePretrip_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueuePretrip_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueuePretrip_v1Async(usn, pwd, permissionToken, vehicleId, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueuePretrip_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueuePretrip_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueuePretrip_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueuePretrip_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueuePretrip_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options}, Me.RemoteReeferConfigQueuePretrip_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueuePretrip_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueuePretrip_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueuePretrip_v1Completed(Me, New RemoteReeferConfigQueuePretrip_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueSetIntellisenseProfile_"& _ 
            "v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueSetIntellisenseProfile_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal profileId As Integer, ByVal profileName As String, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueSetIntellisenseProfile_v1", New Object() {usn, pwd, permissionToken, vehicleId, profileId, profileName, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueSetIntellisenseProfile_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal profileId As Integer, ByVal profileName As String, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueSetIntellisenseProfile_v1Async(usn, pwd, permissionToken, vehicleId, profileId, profileName, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueSetIntellisenseProfile_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal profileId As Integer, ByVal profileName As String, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueSetIntellisenseProfile_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueSetIntellisenseProfile_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueSetIntellisenseProfile_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueSetIntellisenseProfile_v1", New Object() {usn, pwd, permissionToken, vehicleId, profileId, profileName, expiryTime, options}, Me.RemoteReeferConfigQueueSetIntellisenseProfile_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueSetIntellisenseProfile_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueSetIntellisenseProfile_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueSetIntellisenseProfile_v1Completed(Me, New RemoteReeferConfigQueueSetIntellisenseProfile_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigQueueDownloadIntellisensePro"& _ 
            "files_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String)
            Me.RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1Async(usn, pwd, permissionToken, vehicleId, expiryTime, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1Async(ByVal usn As String, ByVal pwd As String, ByVal permissionToken As String, ByVal vehicleId As Integer, ByVal expiryTime As Date, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigQueueDownloadIntellisenseProfiles_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1", New Object() {usn, pwd, permissionToken, vehicleId, expiryTime, options}, Me.RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigQueueDownloadIntellisenseProfiles_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1Completed(Me, New RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetRCOMDeviceRequestStatus_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRCOMDeviceRequestStatus_v1(ByVal usn As String, ByVal pwd As String, ByVal requestIds() As Integer, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetRCOMDeviceRequestStatus_v1", New Object() {usn, pwd, requestIds, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRCOMDeviceRequestStatus_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestIds() As Integer, ByVal options As String)
            Me.GetRCOMDeviceRequestStatus_v1Async(usn, pwd, requestIds, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRCOMDeviceRequestStatus_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestIds() As Integer, ByVal options As String, ByVal userState As Object)
            If (Me.GetRCOMDeviceRequestStatus_v1OperationCompleted Is Nothing) Then
                Me.GetRCOMDeviceRequestStatus_v1OperationCompleted = AddressOf Me.OnGetRCOMDeviceRequestStatus_v1OperationCompleted
            End If
            Me.InvokeAsync("GetRCOMDeviceRequestStatus_v1", New Object() {usn, pwd, requestIds, options}, Me.GetRCOMDeviceRequestStatus_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRCOMDeviceRequestStatus_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRCOMDeviceRequestStatus_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRCOMDeviceRequestStatus_v1Completed(Me, New GetRCOMDeviceRequestStatus_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/RemoteReeferConfigGetIntellisenseProfiles_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoteReeferConfigGetIntellisenseProfiles_v1(ByVal usn As String, ByVal pwd As String, ByVal vehicleIds() As Integer, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("RemoteReeferConfigGetIntellisenseProfiles_v1", New Object() {usn, pwd, vehicleIds, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigGetIntellisenseProfiles_v1Async(ByVal usn As String, ByVal pwd As String, ByVal vehicleIds() As Integer, ByVal options As String)
            Me.RemoteReeferConfigGetIntellisenseProfiles_v1Async(usn, pwd, vehicleIds, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoteReeferConfigGetIntellisenseProfiles_v1Async(ByVal usn As String, ByVal pwd As String, ByVal vehicleIds() As Integer, ByVal options As String, ByVal userState As Object)
            If (Me.RemoteReeferConfigGetIntellisenseProfiles_v1OperationCompleted Is Nothing) Then
                Me.RemoteReeferConfigGetIntellisenseProfiles_v1OperationCompleted = AddressOf Me.OnRemoteReeferConfigGetIntellisenseProfiles_v1OperationCompleted
            End If
            Me.InvokeAsync("RemoteReeferConfigGetIntellisenseProfiles_v1", New Object() {usn, pwd, vehicleIds, options}, Me.RemoteReeferConfigGetIntellisenseProfiles_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoteReeferConfigGetIntellisenseProfiles_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoteReeferConfigGetIntellisenseProfiles_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoteReeferConfigGetIntellisenseProfiles_v1Completed(Me, New RemoteReeferConfigGetIntellisenseProfiles_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetHoSDutyStateChanges_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHoSDutyStateChanges_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestStartTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetHoSDutyStateChanges_v1", New Object() {usn, pwd, columns, options, earliestStartTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHoSDutyStateChanges_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestStartTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetHoSDutyStateChanges_v1Async(usn, pwd, columns, options, earliestStartTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHoSDutyStateChanges_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestStartTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetHoSDutyStateChanges_v1OperationCompleted Is Nothing) Then
                Me.GetHoSDutyStateChanges_v1OperationCompleted = AddressOf Me.OnGetHoSDutyStateChanges_v1OperationCompleted
            End If
            Me.InvokeAsync("GetHoSDutyStateChanges_v1", New Object() {usn, pwd, columns, options, earliestStartTime, startPointGeneration, requestedNumRows}, Me.GetHoSDutyStateChanges_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHoSDutyStateChanges_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHoSDutyStateChanges_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHoSDutyStateChanges_v1Completed(Me, New GetHoSDutyStateChanges_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetHoSDriverAvailableHours_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHoSDriverAvailableHours_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetHoSDriverAvailableHours_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHoSDriverAvailableHours_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetHoSDriverAvailableHours_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHoSDriverAvailableHours_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetHoSDriverAvailableHours_v1OperationCompleted Is Nothing) Then
                Me.GetHoSDriverAvailableHours_v1OperationCompleted = AddressOf Me.OnGetHoSDriverAvailableHours_v1OperationCompleted
            End If
            Me.InvokeAsync("GetHoSDriverAvailableHours_v1", New Object() {usn, pwd, columns, options}, Me.GetHoSDriverAvailableHours_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHoSDriverAvailableHours_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHoSDriverAvailableHours_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHoSDriverAvailableHours_v1Completed(Me, New GetHoSDriverAvailableHours_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetHoSDriversDailyDutyLogSummary_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHoSDriversDailyDutyLogSummary_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startOfDayUTC As Date, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal driverID As System.Nullable(Of Integer), ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetHoSDriversDailyDutyLogSummary_v1", New Object() {usn, pwd, columns, options, startOfDayUTC, driverID})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHoSDriversDailyDutyLogSummary_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startOfDayUTC As Date, ByVal driverID As System.Nullable(Of Integer))
            Me.GetHoSDriversDailyDutyLogSummary_v1Async(usn, pwd, columns, options, startOfDayUTC, driverID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHoSDriversDailyDutyLogSummary_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startOfDayUTC As Date, ByVal driverID As System.Nullable(Of Integer), ByVal userState As Object)
            If (Me.GetHoSDriversDailyDutyLogSummary_v1OperationCompleted Is Nothing) Then
                Me.GetHoSDriversDailyDutyLogSummary_v1OperationCompleted = AddressOf Me.OnGetHoSDriversDailyDutyLogSummary_v1OperationCompleted
            End If
            Me.InvokeAsync("GetHoSDriversDailyDutyLogSummary_v1", New Object() {usn, pwd, columns, options, startOfDayUTC, driverID}, Me.GetHoSDriversDailyDutyLogSummary_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHoSDriversDailyDutyLogSummary_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHoSDriversDailyDutyLogSummary_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHoSDriversDailyDutyLogSummary_v1Completed(Me, New GetHoSDriversDailyDutyLogSummary_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetHoSDriversWithUpdatedDutyLogsSummary_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHoSDriversWithUpdatedDutyLogsSummary_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startOfWeeklyCycleUTC As Date, ByVal generationNumber As Long, ByRef generationNumberForNextCall As Long, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetHoSDriversWithUpdatedDutyLogsSummary_v1", New Object() {usn, pwd, columns, options, startOfWeeklyCycleUTC, generationNumber})
            generationNumberForNextCall = CType(results(1),Long)
            errorMsg = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHoSDriversWithUpdatedDutyLogsSummary_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startOfWeeklyCycleUTC As Date, ByVal generationNumber As Long)
            Me.GetHoSDriversWithUpdatedDutyLogsSummary_v1Async(usn, pwd, columns, options, startOfWeeklyCycleUTC, generationNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHoSDriversWithUpdatedDutyLogsSummary_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startOfWeeklyCycleUTC As Date, ByVal generationNumber As Long, ByVal userState As Object)
            If (Me.GetHoSDriversWithUpdatedDutyLogsSummary_v1OperationCompleted Is Nothing) Then
                Me.GetHoSDriversWithUpdatedDutyLogsSummary_v1OperationCompleted = AddressOf Me.OnGetHoSDriversWithUpdatedDutyLogsSummary_v1OperationCompleted
            End If
            Me.InvokeAsync("GetHoSDriversWithUpdatedDutyLogsSummary_v1", New Object() {usn, pwd, columns, options, startOfWeeklyCycleUTC, generationNumber}, Me.GetHoSDriversWithUpdatedDutyLogsSummary_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHoSDriversWithUpdatedDutyLogsSummary_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHoSDriversWithUpdatedDutyLogsSummary_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHoSDriversWithUpdatedDutyLogsSummary_v1Completed(Me, New GetHoSDriversWithUpdatedDutyLogsSummary_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/SetTrailerNoForVehicle_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetTrailerNoForVehicle_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timestamp As Date, ByVal trailerNo As String) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("SetTrailerNoForVehicle_v1", New Object() {usn, pwd, options, vehicleID, timestamp, trailerNo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetTrailerNoForVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timestamp As Date, ByVal trailerNo As String)
            Me.SetTrailerNoForVehicle_v1Async(usn, pwd, options, vehicleID, timestamp, trailerNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTrailerNoForVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timestamp As Date, ByVal trailerNo As String, ByVal userState As Object)
            If (Me.SetTrailerNoForVehicle_v1OperationCompleted Is Nothing) Then
                Me.SetTrailerNoForVehicle_v1OperationCompleted = AddressOf Me.OnSetTrailerNoForVehicle_v1OperationCompleted
            End If
            Me.InvokeAsync("SetTrailerNoForVehicle_v1", New Object() {usn, pwd, options, vehicleID, timestamp, trailerNo}, Me.SetTrailerNoForVehicle_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetTrailerNoForVehicle_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetTrailerNoForVehicle_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetTrailerNoForVehicle_v1Completed(Me, New SetTrailerNoForVehicle_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/SetShippingDocumentNoForVehicle_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetShippingDocumentNoForVehicle_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timestamp As Date, ByVal shippingDocNo As String) As <System.Xml.Serialization.XmlElementAttribute("errorMsg")> String
            Dim results() As Object = Me.Invoke("SetShippingDocumentNoForVehicle_v1", New Object() {usn, pwd, options, vehicleID, timestamp, shippingDocNo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetShippingDocumentNoForVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timestamp As Date, ByVal shippingDocNo As String)
            Me.SetShippingDocumentNoForVehicle_v1Async(usn, pwd, options, vehicleID, timestamp, shippingDocNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetShippingDocumentNoForVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleID As Integer, ByVal timestamp As Date, ByVal shippingDocNo As String, ByVal userState As Object)
            If (Me.SetShippingDocumentNoForVehicle_v1OperationCompleted Is Nothing) Then
                Me.SetShippingDocumentNoForVehicle_v1OperationCompleted = AddressOf Me.OnSetShippingDocumentNoForVehicle_v1OperationCompleted
            End If
            Me.InvokeAsync("SetShippingDocumentNoForVehicle_v1", New Object() {usn, pwd, options, vehicleID, timestamp, shippingDocNo}, Me.SetShippingDocumentNoForVehicle_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetShippingDocumentNoForVehicle_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetShippingDocumentNoForVehicle_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetShippingDocumentNoForVehicle_v1Completed(Me, New SetShippingDocumentNoForVehicle_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetTemperatureReadings_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTemperatureReadings_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal earliestServerTimeStamp As Date, ByVal startRowId As Long, ByVal options As String, ByRef lastRowId As Long, ByRef errorMsg As String, ByRef ajustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("GetTemperatureReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, earliestServerTimeStamp, startRowId, options})
            lastRowId = CType(results(1),Long)
            errorMsg = CType(results(2),String)
            ajustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTemperatureReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal earliestServerTimeStamp As Date, ByVal startRowId As Long, ByVal options As String)
            Me.GetTemperatureReadings_v1Async(usn, pwd, requestedRowNumber, columns, earliestServerTimeStamp, startRowId, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTemperatureReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal earliestServerTimeStamp As Date, ByVal startRowId As Long, ByVal options As String, ByVal userState As Object)
            If (Me.GetTemperatureReadings_v1OperationCompleted Is Nothing) Then
                Me.GetTemperatureReadings_v1OperationCompleted = AddressOf Me.OnGetTemperatureReadings_v1OperationCompleted
            End If
            Me.InvokeAsync("GetTemperatureReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, earliestServerTimeStamp, startRowId, options}, Me.GetTemperatureReadings_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTemperatureReadings_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTemperatureReadings_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTemperatureReadings_v1Completed(Me, New GetTemperatureReadings_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/Get_TemperatureReadings_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_TemperatureReadings_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal earliestServerTimeStamp As Date, ByVal startRowId As Long, ByVal options As String, ByRef lastRowId As Long, ByRef errorMsg As String, ByRef ajustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("Get_TemperatureReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, earliestServerTimeStamp, startRowId, options})
            lastRowId = CType(results(1),Long)
            errorMsg = CType(results(2),String)
            ajustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_TemperatureReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal earliestServerTimeStamp As Date, ByVal startRowId As Long, ByVal options As String)
            Me.Get_TemperatureReadings_v1Async(usn, pwd, requestedRowNumber, columns, earliestServerTimeStamp, startRowId, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_TemperatureReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal earliestServerTimeStamp As Date, ByVal startRowId As Long, ByVal options As String, ByVal userState As Object)
            If (Me.Get_TemperatureReadings_v1OperationCompleted Is Nothing) Then
                Me.Get_TemperatureReadings_v1OperationCompleted = AddressOf Me.OnGet_TemperatureReadings_v1OperationCompleted
            End If
            Me.InvokeAsync("Get_TemperatureReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, earliestServerTimeStamp, startRowId, options}, Me.Get_TemperatureReadings_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_TemperatureReadings_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_TemperatureReadings_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_TemperatureReadings_v1Completed(Me, New Get_TemperatureReadings_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetFridgeAlarms_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFridgeAlarms_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startTimeStamp As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetFridgeAlarms_v1", New Object() {usn, pwd, columns, options, startTimeStamp, startPointGeneration, requestedNumRows})
            lastGeneration = CType(results(1),Long)
            adjustedNumRows = CType(results(2),Integer)
            errorMsg = CType(results(3),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFridgeAlarms_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startTimeStamp As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetFridgeAlarms_v1Async(usn, pwd, columns, options, startTimeStamp, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFridgeAlarms_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startTimeStamp As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetFridgeAlarms_v1OperationCompleted Is Nothing) Then
                Me.GetFridgeAlarms_v1OperationCompleted = AddressOf Me.OnGetFridgeAlarms_v1OperationCompleted
            End If
            Me.InvokeAsync("GetFridgeAlarms_v1", New Object() {usn, pwd, columns, options, startTimeStamp, startPointGeneration, requestedNumRows}, Me.GetFridgeAlarms_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFridgeAlarms_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFridgeAlarms_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFridgeAlarms_v1Completed(Me, New GetFridgeAlarms_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/Get_ServiceInfo_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ServiceInfo_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("Get_ServiceInfo_v1", New Object() {usn, pwd, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ServiceInfo_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String)
            Me.Get_ServiceInfo_v1Async(usn, pwd, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ServiceInfo_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal userState As Object)
            If (Me.Get_ServiceInfo_v1OperationCompleted Is Nothing) Then
                Me.Get_ServiceInfo_v1OperationCompleted = AddressOf Me.OnGet_ServiceInfo_v1OperationCompleted
            End If
            Me.InvokeAsync("Get_ServiceInfo_v1", New Object() {usn, pwd, options}, Me.Get_ServiceInfo_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ServiceInfo_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ServiceInfo_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ServiceInfo_v1Completed(Me, New Get_ServiceInfo_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetServiceInfo_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServiceInfo_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetServiceInfo_v1", New Object() {usn, pwd, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServiceInfo_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String)
            Me.GetServiceInfo_v1Async(usn, pwd, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServiceInfo_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetServiceInfo_v1OperationCompleted Is Nothing) Then
                Me.GetServiceInfo_v1OperationCompleted = AddressOf Me.OnGetServiceInfo_v1OperationCompleted
            End If
            Me.InvokeAsync("GetServiceInfo_v1", New Object() {usn, pwd, options}, Me.GetServiceInfo_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServiceInfo_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServiceInfo_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServiceInfo_v1Completed(Me, New GetServiceInfo_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicles_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicles_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetVehicles_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicles_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetVehicles_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicles_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetVehicles_v1OperationCompleted Is Nothing) Then
                Me.GetVehicles_v1OperationCompleted = AddressOf Me.OnGetVehicles_v1OperationCompleted
            End If
            Me.InvokeAsync("GetVehicles_v1", New Object() {usn, pwd, columns, options}, Me.GetVehicles_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicles_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicles_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicles_v1Completed(Me, New GetVehicles_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicleFolders_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleFolders_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetVehicleFolders_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleFolders_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetVehicleFolders_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleFolders_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetVehicleFolders_v1OperationCompleted Is Nothing) Then
                Me.GetVehicleFolders_v1OperationCompleted = AddressOf Me.OnGetVehicleFolders_v1OperationCompleted
            End If
            Me.InvokeAsync("GetVehicleFolders_v1", New Object() {usn, pwd, columns, options}, Me.GetVehicleFolders_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleFolders_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleFolders_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleFolders_v1Completed(Me, New GetVehicleFolders_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetCurrentVehicleStatus_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCurrentVehicleStatus_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetCurrentVehicleStatus_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCurrentVehicleStatus_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetCurrentVehicleStatus_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCurrentVehicleStatus_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetCurrentVehicleStatus_v1OperationCompleted Is Nothing) Then
                Me.GetCurrentVehicleStatus_v1OperationCompleted = AddressOf Me.OnGetCurrentVehicleStatus_v1OperationCompleted
            End If
            Me.InvokeAsync("GetCurrentVehicleStatus_v1", New Object() {usn, pwd, columns, options}, Me.GetCurrentVehicleStatus_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCurrentVehicleStatus_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCurrentVehicleStatus_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCurrentVehicleStatus_v1Completed(Me, New GetCurrentVehicleStatus_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/ReadAllDataItems_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadAllDataItems_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("ReadAllDataItems_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadAllDataItems_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.ReadAllDataItems_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadAllDataItems_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.ReadAllDataItems_v1OperationCompleted Is Nothing) Then
                Me.ReadAllDataItems_v1OperationCompleted = AddressOf Me.OnReadAllDataItems_v1OperationCompleted
            End If
            Me.InvokeAsync("ReadAllDataItems_v1", New Object() {usn, pwd, columns, options}, Me.ReadAllDataItems_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnReadAllDataItems_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadAllDataItems_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadAllDataItems_v1Completed(Me, New ReadAllDataItems_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/InsertDataItems_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertDataItems_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal dataItemType As String, ByVal dataItem As String, ByVal groupID As Integer, ByRef itemID As Long, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("InsertDataItems_v1", New Object() {usn, pwd, options, dataItemType, dataItem, groupID})
            itemID = CType(results(1),Long)
            errorMsg = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertDataItems_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal dataItemType As String, ByVal dataItem As String, ByVal groupID As Integer)
            Me.InsertDataItems_v1Async(usn, pwd, options, dataItemType, dataItem, groupID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertDataItems_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal dataItemType As String, ByVal dataItem As String, ByVal groupID As Integer, ByVal userState As Object)
            If (Me.InsertDataItems_v1OperationCompleted Is Nothing) Then
                Me.InsertDataItems_v1OperationCompleted = AddressOf Me.OnInsertDataItems_v1OperationCompleted
            End If
            Me.InvokeAsync("InsertDataItems_v1", New Object() {usn, pwd, options, dataItemType, dataItem, groupID}, Me.InsertDataItems_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertDataItems_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertDataItems_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertDataItems_v1Completed(Me, New InsertDataItems_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/ReadDataItem_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadDataItem_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Long, ByRef errorMsg As String, ByRef dataItem As String) As String
            Dim results() As Object = Me.Invoke("ReadDataItem_v1", New Object() {usn, pwd, options, itemID})
            errorMsg = CType(results(1),String)
            dataItem = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadDataItem_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Long)
            Me.ReadDataItem_v1Async(usn, pwd, options, itemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadDataItem_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Long, ByVal userState As Object)
            If (Me.ReadDataItem_v1OperationCompleted Is Nothing) Then
                Me.ReadDataItem_v1OperationCompleted = AddressOf Me.OnReadDataItem_v1OperationCompleted
            End If
            Me.InvokeAsync("ReadDataItem_v1", New Object() {usn, pwd, options, itemID}, Me.ReadDataItem_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnReadDataItem_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadDataItem_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadDataItem_v1Completed(Me, New ReadDataItem_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/UpdateDataItem_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateDataItem_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Long, ByVal data As String, ByRef errorMsg As String, ByRef returnValue As Integer) As String
            Dim results() As Object = Me.Invoke("UpdateDataItem_v1", New Object() {usn, pwd, options, itemID, data})
            errorMsg = CType(results(1),String)
            returnValue = CType(results(2),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateDataItem_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Long, ByVal data As String)
            Me.UpdateDataItem_v1Async(usn, pwd, options, itemID, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDataItem_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Long, ByVal data As String, ByVal userState As Object)
            If (Me.UpdateDataItem_v1OperationCompleted Is Nothing) Then
                Me.UpdateDataItem_v1OperationCompleted = AddressOf Me.OnUpdateDataItem_v1OperationCompleted
            End If
            Me.InvokeAsync("UpdateDataItem_v1", New Object() {usn, pwd, options, itemID, data}, Me.UpdateDataItem_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateDataItem_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateDataItem_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateDataItem_v1Completed(Me, New UpdateDataItem_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/DeleteDataItem_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDataItem_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Integer, ByRef errorMsg As String, ByRef returnValue As Integer) As String
            Dim results() As Object = Me.Invoke("DeleteDataItem_v1", New Object() {usn, pwd, options, itemID})
            errorMsg = CType(results(1),String)
            returnValue = CType(results(2),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDataItem_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Integer)
            Me.DeleteDataItem_v1Async(usn, pwd, options, itemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDataItem_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal itemID As Integer, ByVal userState As Object)
            If (Me.DeleteDataItem_v1OperationCompleted Is Nothing) Then
                Me.DeleteDataItem_v1OperationCompleted = AddressOf Me.OnDeleteDataItem_v1OperationCompleted
            End If
            Me.InvokeAsync("DeleteDataItem_v1", New Object() {usn, pwd, options, itemID}, Me.DeleteDataItem_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDataItem_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDataItem_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDataItem_v1Completed(Me, New DeleteDataItem_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/AddDataItemGroup_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDataItemGroup_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal guid As System.Guid, ByVal groupName As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("AddDataItemGroup_v1", New Object() {usn, pwd, options, guid, groupName})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDataItemGroup_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal guid As System.Guid, ByVal groupName As String)
            Me.AddDataItemGroup_v1Async(usn, pwd, options, guid, groupName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDataItemGroup_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal guid As System.Guid, ByVal groupName As String, ByVal userState As Object)
            If (Me.AddDataItemGroup_v1OperationCompleted Is Nothing) Then
                Me.AddDataItemGroup_v1OperationCompleted = AddressOf Me.OnAddDataItemGroup_v1OperationCompleted
            End If
            Me.InvokeAsync("AddDataItemGroup_v1", New Object() {usn, pwd, options, guid, groupName}, Me.AddDataItemGroup_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDataItemGroup_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDataItemGroup_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDataItemGroup_v1Completed(Me, New AddDataItemGroup_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/AddDataItemFleet_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDataItemFleet_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal groupID As Integer, ByVal guid As System.Guid, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("AddDataItemFleet_v1", New Object() {usn, pwd, options, groupID, guid})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDataItemFleet_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal groupID As Integer, ByVal guid As System.Guid)
            Me.AddDataItemFleet_v1Async(usn, pwd, options, groupID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDataItemFleet_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal groupID As Integer, ByVal guid As System.Guid, ByVal userState As Object)
            If (Me.AddDataItemFleet_v1OperationCompleted Is Nothing) Then
                Me.AddDataItemFleet_v1OperationCompleted = AddressOf Me.OnAddDataItemFleet_v1OperationCompleted
            End If
            Me.InvokeAsync("AddDataItemFleet_v1", New Object() {usn, pwd, options, groupID, guid}, Me.AddDataItemFleet_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDataItemFleet_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDataItemFleet_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDataItemFleet_v1Completed(Me, New AddDataItemFleet_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/SendRCOMInCabFormMessage_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendRCOMInCabFormMessage_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleIDs() As Integer, ByVal userName As String, ByVal msgTimeStamp As Date, ByVal formId As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal messageBody As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("SendRCOMInCabFormMessage_v1", New Object() {usn, pwd, options, vehicleIDs, userName, msgTimeStamp, formId, formVersion, formSchema, messageBody})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendRCOMInCabFormMessage_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleIDs() As Integer, ByVal userName As String, ByVal msgTimeStamp As Date, ByVal formId As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal messageBody As String)
            Me.SendRCOMInCabFormMessage_v1Async(usn, pwd, options, vehicleIDs, userName, msgTimeStamp, formId, formVersion, formSchema, messageBody, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendRCOMInCabFormMessage_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleIDs() As Integer, ByVal userName As String, ByVal msgTimeStamp As Date, ByVal formId As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal messageBody As String, ByVal userState As Object)
            If (Me.SendRCOMInCabFormMessage_v1OperationCompleted Is Nothing) Then
                Me.SendRCOMInCabFormMessage_v1OperationCompleted = AddressOf Me.OnSendRCOMInCabFormMessage_v1OperationCompleted
            End If
            Me.InvokeAsync("SendRCOMInCabFormMessage_v1", New Object() {usn, pwd, options, vehicleIDs, userName, msgTimeStamp, formId, formVersion, formSchema, messageBody}, Me.SendRCOMInCabFormMessage_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnSendRCOMInCabFormMessage_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.SendRCOMInCabFormMessage_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendRCOMInCabFormMessage_v1Completed(Me, New SendRCOMInCabFormMessage_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetRCOMInCabIncomingFormMessages_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRCOMInCabIncomingFormMessages_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetRCOMInCabIncomingFormMessages_v1", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabIncomingFormMessages_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetRCOMInCabIncomingFormMessages_v1Async(usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabIncomingFormMessages_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetRCOMInCabIncomingFormMessages_v1OperationCompleted Is Nothing) Then
                Me.GetRCOMInCabIncomingFormMessages_v1OperationCompleted = AddressOf Me.OnGetRCOMInCabIncomingFormMessages_v1OperationCompleted
            End If
            Me.InvokeAsync("GetRCOMInCabIncomingFormMessages_v1", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows}, Me.GetRCOMInCabIncomingFormMessages_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRCOMInCabIncomingFormMessages_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRCOMInCabIncomingFormMessages_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRCOMInCabIncomingFormMessages_v1Completed(Me, New GetRCOMInCabIncomingFormMessages_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetRCOMInCabOutgoingFormMessages_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRCOMInCabOutgoingFormMessages_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetRCOMInCabOutgoingFormMessages_v1", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabOutgoingFormMessages_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetRCOMInCabOutgoingFormMessages_v1Async(usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabOutgoingFormMessages_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetRCOMInCabOutgoingFormMessages_v1OperationCompleted Is Nothing) Then
                Me.GetRCOMInCabOutgoingFormMessages_v1OperationCompleted = AddressOf Me.OnGetRCOMInCabOutgoingFormMessages_v1OperationCompleted
            End If
            Me.InvokeAsync("GetRCOMInCabOutgoingFormMessages_v1", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows}, Me.GetRCOMInCabOutgoingFormMessages_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRCOMInCabOutgoingFormMessages_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRCOMInCabOutgoingFormMessages_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRCOMInCabOutgoingFormMessages_v1Completed(Me, New GetRCOMInCabOutgoingFormMessages_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetFormDefinitions_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFormDefinitions_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetFormDefinitions_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFormDefinitions_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetFormDefinitions_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFormDefinitions_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetFormDefinitions_v1OperationCompleted Is Nothing) Then
                Me.GetFormDefinitions_v1OperationCompleted = AddressOf Me.OnGetFormDefinitions_v1OperationCompleted
            End If
            Me.InvokeAsync("GetFormDefinitions_v1", New Object() {usn, pwd, columns, options}, Me.GetFormDefinitions_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFormDefinitions_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFormDefinitions_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFormDefinitions_v1Completed(Me, New GetFormDefinitions_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/AddFormDefinition_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFormDefinition_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal formID As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal displayName As String, ByVal status As Integer, ByVal formDefinition As String, ByVal unsolicited As Boolean, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("AddFormDefinition_v1", New Object() {usn, pwd, options, formID, formVersion, formSchema, displayName, status, formDefinition, unsolicited})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFormDefinition_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal formID As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal displayName As String, ByVal status As Integer, ByVal formDefinition As String, ByVal unsolicited As Boolean)
            Me.AddFormDefinition_v1Async(usn, pwd, options, formID, formVersion, formSchema, displayName, status, formDefinition, unsolicited, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFormDefinition_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal formID As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal displayName As String, ByVal status As Integer, ByVal formDefinition As String, ByVal unsolicited As Boolean, ByVal userState As Object)
            If (Me.AddFormDefinition_v1OperationCompleted Is Nothing) Then
                Me.AddFormDefinition_v1OperationCompleted = AddressOf Me.OnAddFormDefinition_v1OperationCompleted
            End If
            Me.InvokeAsync("AddFormDefinition_v1", New Object() {usn, pwd, options, formID, formVersion, formSchema, displayName, status, formDefinition, unsolicited}, Me.AddFormDefinition_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFormDefinition_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFormDefinition_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFormDefinition_v1Completed(Me, New AddFormDefinition_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetRCOMInCabStops_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRCOMInCabStops_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetRCOMInCabStops_v1", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabStops_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetRCOMInCabStops_v1Async(usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabStops_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetRCOMInCabStops_v1OperationCompleted Is Nothing) Then
                Me.GetRCOMInCabStops_v1OperationCompleted = AddressOf Me.OnGetRCOMInCabStops_v1OperationCompleted
            End If
            Me.InvokeAsync("GetRCOMInCabStops_v1", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows}, Me.GetRCOMInCabStops_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRCOMInCabStops_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRCOMInCabStops_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRCOMInCabStops_v1Completed(Me, New GetRCOMInCabStops_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetRCOMInCabStops_v2", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRCOMInCabStops_v2(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetRCOMInCabStops_v2", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabStops_v2Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetRCOMInCabStops_v2Async(usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabStops_v2Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestCreationTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetRCOMInCabStops_v2OperationCompleted Is Nothing) Then
                Me.GetRCOMInCabStops_v2OperationCompleted = AddressOf Me.OnGetRCOMInCabStops_v2OperationCompleted
            End If
            Me.InvokeAsync("GetRCOMInCabStops_v2", New Object() {usn, pwd, columns, options, earliestCreationTime, startPointGeneration, requestedNumRows}, Me.GetRCOMInCabStops_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRCOMInCabStops_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRCOMInCabStops_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRCOMInCabStops_v2Completed(Me, New GetRCOMInCabStops_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetRCOMInCabTrips_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRCOMInCabTrips_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestUpdateTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetRCOMInCabTrips_v1", New Object() {usn, pwd, columns, options, earliestUpdateTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabTrips_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestUpdateTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetRCOMInCabTrips_v1Async(usn, pwd, columns, options, earliestUpdateTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRCOMInCabTrips_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestUpdateTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetRCOMInCabTrips_v1OperationCompleted Is Nothing) Then
                Me.GetRCOMInCabTrips_v1OperationCompleted = AddressOf Me.OnGetRCOMInCabTrips_v1OperationCompleted
            End If
            Me.InvokeAsync("GetRCOMInCabTrips_v1", New Object() {usn, pwd, columns, options, earliestUpdateTime, startPointGeneration, requestedNumRows}, Me.GetRCOMInCabTrips_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRCOMInCabTrips_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRCOMInCabTrips_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRCOMInCabTrips_v1Completed(Me, New GetRCOMInCabTrips_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/CreateIncomingInCabMessage_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateIncomingInCabMessage_v1(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleId As Integer, ByVal guid As System.Guid, ByVal formId As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal message As String, ByRef errorMsg As String, ByRef messageId As Long) As String
            Dim results() As Object = Me.Invoke("CreateIncomingInCabMessage_v1", New Object() {usn, pwd, options, vehicleId, guid, formId, formVersion, formSchema, message})
            errorMsg = CType(results(1),String)
            messageId = CType(results(2),Long)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateIncomingInCabMessage_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleId As Integer, ByVal guid As System.Guid, ByVal formId As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal message As String)
            Me.CreateIncomingInCabMessage_v1Async(usn, pwd, options, vehicleId, guid, formId, formVersion, formSchema, message, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateIncomingInCabMessage_v1Async(ByVal usn As String, ByVal pwd As String, ByVal options As String, ByVal vehicleId As Integer, ByVal guid As System.Guid, ByVal formId As Integer, ByVal formVersion As Integer, ByVal formSchema As Integer, ByVal message As String, ByVal userState As Object)
            If (Me.CreateIncomingInCabMessage_v1OperationCompleted Is Nothing) Then
                Me.CreateIncomingInCabMessage_v1OperationCompleted = AddressOf Me.OnCreateIncomingInCabMessage_v1OperationCompleted
            End If
            Me.InvokeAsync("CreateIncomingInCabMessage_v1", New Object() {usn, pwd, options, vehicleId, guid, formId, formVersion, formSchema, message}, Me.CreateIncomingInCabMessage_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateIncomingInCabMessage_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateIncomingInCabMessage_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateIncomingInCabMessage_v1Completed(Me, New CreateIncomingInCabMessage_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetLiveTachographEvents_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLiveTachographEvents_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedNumRows As Integer, ByVal columns() As String, ByVal earliestStartTime As Date, ByVal startPointGeneration As Long, ByVal options As String, ByRef lastGeneration As Long, ByRef errorMsg As String, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetLiveTachographEvents_v1", New Object() {usn, pwd, requestedNumRows, columns, earliestStartTime, startPointGeneration, options})
            lastGeneration = CType(results(1),Long)
            errorMsg = CType(results(2),String)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLiveTachographEvents_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedNumRows As Integer, ByVal columns() As String, ByVal earliestStartTime As Date, ByVal startPointGeneration As Long, ByVal options As String)
            Me.GetLiveTachographEvents_v1Async(usn, pwd, requestedNumRows, columns, earliestStartTime, startPointGeneration, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLiveTachographEvents_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedNumRows As Integer, ByVal columns() As String, ByVal earliestStartTime As Date, ByVal startPointGeneration As Long, ByVal options As String, ByVal userState As Object)
            If (Me.GetLiveTachographEvents_v1OperationCompleted Is Nothing) Then
                Me.GetLiveTachographEvents_v1OperationCompleted = AddressOf Me.OnGetLiveTachographEvents_v1OperationCompleted
            End If
            Me.InvokeAsync("GetLiveTachographEvents_v1", New Object() {usn, pwd, requestedNumRows, columns, earliestStartTime, startPointGeneration, options}, Me.GetLiveTachographEvents_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLiveTachographEvents_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLiveTachographEvents_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLiveTachographEvents_v1Completed(Me, New GetLiveTachographEvents_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetLatestVehicleReadings_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestVehicleReadings_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetLatestVehicleReadings_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestVehicleReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetLatestVehicleReadings_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestVehicleReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetLatestVehicleReadings_v1OperationCompleted Is Nothing) Then
                Me.GetLatestVehicleReadings_v1OperationCompleted = AddressOf Me.OnGetLatestVehicleReadings_v1OperationCompleted
            End If
            Me.InvokeAsync("GetLatestVehicleReadings_v1", New Object() {usn, pwd, columns, options}, Me.GetLatestVehicleReadings_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestVehicleReadings_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestVehicleReadings_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestVehicleReadings_v1Completed(Me, New GetLatestVehicleReadings_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetPTOEvents_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPTOEvents_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal onTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetPTOEvents_v1", New Object() {usn, pwd, columns, options, onTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPTOEvents_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal onTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetPTOEvents_v1Async(usn, pwd, columns, options, onTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPTOEvents_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal onTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetPTOEvents_v1OperationCompleted Is Nothing) Then
                Me.GetPTOEvents_v1OperationCompleted = AddressOf Me.OnGetPTOEvents_v1OperationCompleted
            End If
            Me.InvokeAsync("GetPTOEvents_v1", New Object() {usn, pwd, columns, options, onTime, startPointGeneration, requestedNumRows}, Me.GetPTOEvents_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPTOEvents_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPTOEvents_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPTOEvents_v1Completed(Me, New GetPTOEvents_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicleStops_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleStops_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestArrivalTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetVehicleStops_v1", New Object() {usn, pwd, columns, options, earliestArrivalTime, startPointGeneration, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleStops_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestArrivalTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer)
            Me.GetVehicleStops_v1Async(usn, pwd, columns, options, earliestArrivalTime, startPointGeneration, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleStops_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal earliestArrivalTime As Date, ByVal startPointGeneration As Long, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetVehicleStops_v1OperationCompleted Is Nothing) Then
                Me.GetVehicleStops_v1OperationCompleted = AddressOf Me.OnGetVehicleStops_v1OperationCompleted
            End If
            Me.InvokeAsync("GetVehicleStops_v1", New Object() {usn, pwd, columns, options, earliestArrivalTime, startPointGeneration, requestedNumRows}, Me.GetVehicleStops_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleStops_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleStops_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleStops_v1Completed(Me, New GetVehicleStops_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/Get_GPSReadings_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_GPSReadings_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByRef lastTimeStamp As Date, ByRef errorMsg As String, ByRef ajustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("Get_GPSReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, startTimeStamp, options})
            lastTimeStamp = CType(results(1),Date)
            errorMsg = CType(results(2),String)
            ajustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_GPSReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String)
            Me.Get_GPSReadings_v1Async(usn, pwd, requestedRowNumber, columns, startTimeStamp, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_GPSReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByVal userState As Object)
            If (Me.Get_GPSReadings_v1OperationCompleted Is Nothing) Then
                Me.Get_GPSReadings_v1OperationCompleted = AddressOf Me.OnGet_GPSReadings_v1OperationCompleted
            End If
            Me.InvokeAsync("Get_GPSReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, startTimeStamp, options}, Me.Get_GPSReadings_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_GPSReadings_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_GPSReadings_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_GPSReadings_v1Completed(Me, New Get_GPSReadings_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetGPSReadings_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGPSReadings_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByRef lastTimeStamp As Date, ByRef errorMsg As String, ByRef ajustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("GetGPSReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, startTimeStamp, options})
            lastTimeStamp = CType(results(1),Date)
            errorMsg = CType(results(2),String)
            ajustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGPSReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String)
            Me.GetGPSReadings_v1Async(usn, pwd, requestedRowNumber, columns, startTimeStamp, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGPSReadings_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByVal userState As Object)
            If (Me.GetGPSReadings_v1OperationCompleted Is Nothing) Then
                Me.GetGPSReadings_v1OperationCompleted = AddressOf Me.OnGetGPSReadings_v1OperationCompleted
            End If
            Me.InvokeAsync("GetGPSReadings_v1", New Object() {usn, pwd, requestedRowNumber, columns, startTimeStamp, options}, Me.GetGPSReadings_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGPSReadings_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGPSReadings_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGPSReadings_v1Completed(Me, New GetGPSReadings_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetGpsReadingsForVehicle_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGpsReadingsForVehicle_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByVal vehicleID As Integer, ByRef lastTimeStamp As Date, ByRef errorMsg As String, ByRef ajustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("GetGpsReadingsForVehicle_v1", New Object() {usn, pwd, requestedRowNumber, columns, startTimeStamp, options, vehicleID})
            lastTimeStamp = CType(results(1),Date)
            errorMsg = CType(results(2),String)
            ajustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGpsReadingsForVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByVal vehicleID As Integer)
            Me.GetGpsReadingsForVehicle_v1Async(usn, pwd, requestedRowNumber, columns, startTimeStamp, options, vehicleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGpsReadingsForVehicle_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal startTimeStamp As Date, ByVal options As String, ByVal vehicleID As Integer, ByVal userState As Object)
            If (Me.GetGpsReadingsForVehicle_v1OperationCompleted Is Nothing) Then
                Me.GetGpsReadingsForVehicle_v1OperationCompleted = AddressOf Me.OnGetGpsReadingsForVehicle_v1OperationCompleted
            End If
            Me.InvokeAsync("GetGpsReadingsForVehicle_v1", New Object() {usn, pwd, requestedRowNumber, columns, startTimeStamp, options, vehicleID}, Me.GetGpsReadingsForVehicle_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGpsReadingsForVehicle_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGpsReadingsForVehicle_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGpsReadingsForVehicle_v1Completed(Me, New GetGpsReadingsForVehicle_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetFMSTrips_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFMSTrips_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startPointGeneration As Long, ByVal startTime As Date, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetFMSTrips_v1", New Object() {usn, pwd, columns, options, startPointGeneration, startTime, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFMSTrips_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startPointGeneration As Long, ByVal startTime As Date, ByVal requestedNumRows As Integer)
            Me.GetFMSTrips_v1Async(usn, pwd, columns, options, startPointGeneration, startTime, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFMSTrips_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startPointGeneration As Long, ByVal startTime As Date, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetFMSTrips_v1OperationCompleted Is Nothing) Then
                Me.GetFMSTrips_v1OperationCompleted = AddressOf Me.OnGetFMSTrips_v1OperationCompleted
            End If
            Me.InvokeAsync("GetFMSTrips_v1", New Object() {usn, pwd, columns, options, startPointGeneration, startTime, requestedNumRows}, Me.GetFMSTrips_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFMSTrips_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFMSTrips_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFMSTrips_v1Completed(Me, New GetFMSTrips_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetFMSHarshBrakes_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFMSHarshBrakes_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startPointGeneration As Long, ByVal timeStamp As Date, ByVal requestedNumRows As Integer, ByRef errorMsg As String, ByRef lastGeneration As Long, ByRef adjustedNumRows As Integer) As String
            Dim results() As Object = Me.Invoke("GetFMSHarshBrakes_v1", New Object() {usn, pwd, columns, options, startPointGeneration, timeStamp, requestedNumRows})
            errorMsg = CType(results(1),String)
            lastGeneration = CType(results(2),Long)
            adjustedNumRows = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFMSHarshBrakes_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startPointGeneration As Long, ByVal timeStamp As Date, ByVal requestedNumRows As Integer)
            Me.GetFMSHarshBrakes_v1Async(usn, pwd, columns, options, startPointGeneration, timeStamp, requestedNumRows, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFMSHarshBrakes_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal startPointGeneration As Long, ByVal timeStamp As Date, ByVal requestedNumRows As Integer, ByVal userState As Object)
            If (Me.GetFMSHarshBrakes_v1OperationCompleted Is Nothing) Then
                Me.GetFMSHarshBrakes_v1OperationCompleted = AddressOf Me.OnGetFMSHarshBrakes_v1OperationCompleted
            End If
            Me.InvokeAsync("GetFMSHarshBrakes_v1", New Object() {usn, pwd, columns, options, startPointGeneration, timeStamp, requestedNumRows}, Me.GetFMSHarshBrakes_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFMSHarshBrakes_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFMSHarshBrakes_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFMSHarshBrakes_v1Completed(Me, New GetFMSHarshBrakes_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetCurrentDataTerminalStatus_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCurrentDataTerminalStatus_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetCurrentDataTerminalStatus_v1", New Object() {usn, pwd, columns, options})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCurrentDataTerminalStatus_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String)
            Me.GetCurrentDataTerminalStatus_v1Async(usn, pwd, columns, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCurrentDataTerminalStatus_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal userState As Object)
            If (Me.GetCurrentDataTerminalStatus_v1OperationCompleted Is Nothing) Then
                Me.GetCurrentDataTerminalStatus_v1OperationCompleted = AddressOf Me.OnGetCurrentDataTerminalStatus_v1OperationCompleted
            End If
            Me.InvokeAsync("GetCurrentDataTerminalStatus_v1", New Object() {usn, pwd, columns, options}, Me.GetCurrentDataTerminalStatus_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCurrentDataTerminalStatus_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCurrentDataTerminalStatus_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCurrentDataTerminalStatus_v1Completed(Me, New GetCurrentDataTerminalStatus_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicleWorkingSummary_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleWorkingSummary_v1(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal vehicleID As Integer, ByVal startTime As Date, ByVal endTime As Date, ByRef errorMsg As String) As String
            Dim results() As Object = Me.Invoke("GetVehicleWorkingSummary_v1", New Object() {usn, pwd, columns, options, vehicleID, startTime, endTime})
            errorMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleWorkingSummary_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal vehicleID As Integer, ByVal startTime As Date, ByVal endTime As Date)
            Me.GetVehicleWorkingSummary_v1Async(usn, pwd, columns, options, vehicleID, startTime, endTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleWorkingSummary_v1Async(ByVal usn As String, ByVal pwd As String, ByVal columns() As String, ByVal options As String, ByVal vehicleID As Integer, ByVal startTime As Date, ByVal endTime As Date, ByVal userState As Object)
            If (Me.GetVehicleWorkingSummary_v1OperationCompleted Is Nothing) Then
                Me.GetVehicleWorkingSummary_v1OperationCompleted = AddressOf Me.OnGetVehicleWorkingSummary_v1OperationCompleted
            End If
            Me.InvokeAsync("GetVehicleWorkingSummary_v1", New Object() {usn, pwd, columns, options, vehicleID, startTime, endTime}, Me.GetVehicleWorkingSummary_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleWorkingSummary_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleWorkingSummary_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleWorkingSummary_v1Completed(Me, New GetVehicleWorkingSummary_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FleetManagerAPI.bluetree.ie/GetVehicleActivities_v1", RequestNamespace:="http://FleetManagerAPI.bluetree.ie/", ResponseNamespace:="http://FleetManagerAPI.bluetree.ie/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleActivities_v1(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal options As String, ByVal earliestStartTime As Date, ByRef lastStartTime As Date, ByRef errorMsg As String, ByRef adjustedRowNumber As Integer) As String
            Dim results() As Object = Me.Invoke("GetVehicleActivities_v1", New Object() {usn, pwd, requestedRowNumber, columns, options, earliestStartTime})
            lastStartTime = CType(results(1),Date)
            errorMsg = CType(results(2),String)
            adjustedRowNumber = CType(results(3),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleActivities_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal options As String, ByVal earliestStartTime As Date)
            Me.GetVehicleActivities_v1Async(usn, pwd, requestedRowNumber, columns, options, earliestStartTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleActivities_v1Async(ByVal usn As String, ByVal pwd As String, ByVal requestedRowNumber As Integer, ByVal columns() As String, ByVal options As String, ByVal earliestStartTime As Date, ByVal userState As Object)
            If (Me.GetVehicleActivities_v1OperationCompleted Is Nothing) Then
                Me.GetVehicleActivities_v1OperationCompleted = AddressOf Me.OnGetVehicleActivities_v1OperationCompleted
            End If
            Me.InvokeAsync("GetVehicleActivities_v1", New Object() {usn, pwd, requestedRowNumber, columns, options, earliestStartTime}, Me.GetVehicleActivities_v1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleActivities_v1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleActivities_v1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleActivities_v1Completed(Me, New GetVehicleActivities_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://FleetManagerAPI.bluetree.ie/")>  _
    Public Enum ReeferOpMode
        
        '''<remarks/>
        StartStop
        
        '''<remarks/>
        Continuous
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CreateFuelPurchasedRecord_v1CompletedEventHandler(ByVal sender As Object, ByVal e As CreateFuelPurchasedRecord_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateFuelPurchasedRecord_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicleInspectionDetails_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleInspectionDetails_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleInspectionDetails_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicles_v2CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicles_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicles_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CreateVehicle_v1CompletedEventHandler(ByVal sender As Object, ByVal e As CreateVehicle_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateVehicle_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property vehicleID() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DeleteVehicle_v1CompletedEventHandler(ByVal sender As Object, ByVal e As DeleteVehicle_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteVehicle_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetDriverDetails_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetDriverDetails_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDriverDetails_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetDriverDetails_v2CompletedEventHandler(ByVal sender As Object, ByVal e As GetDriverDetails_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDriverDetails_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CreateDriver_v1CompletedEventHandler(ByVal sender As Object, ByVal e As CreateDriver_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDriver_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property driverID() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CreateDriver_v2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateDriver_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDriver_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property driverID() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateDriver_v1CompletedEventHandler(ByVal sender As Object, ByVal e As UpdateDriver_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateDriver_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateDriver_v2CompletedEventHandler(ByVal sender As Object, ByVal e As UpdateDriver_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateDriver_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DeleteDriver_v1CompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDriver_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDriver_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AssignPin_v1CompletedEventHandler(ByVal sender As Object, ByVal e As AssignPin_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AssignPin_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RevokePin_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RevokePin_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RevokePin_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetCurrentDriverLoginDetails_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetCurrentDriverLoginDetails_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCurrentDriverLoginDetails_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetDriverAuthenticationEvents_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetDriverAuthenticationEvents_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDriverAuthenticationEvents_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastRecordTimeStamp() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetDriverVehicleHistory_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetDriverVehicleHistory_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDriverVehicleHistory_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGpsWithTemperature_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetGpsWithTemperature_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGpsWithTemperature_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastTimeStamp() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CreateLocation_v1CompletedEventHandler(ByVal sender As Object, ByVal e As CreateLocation_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateLocation_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateLocation_v1CompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLocation_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLocation_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetLocations_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetLocations_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLocations_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DeleteLocation_v1CompletedEventHandler(ByVal sender As Object, ByVal e As DeleteLocation_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteLocation_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueEngineStart_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueEngineStart_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueEngineStart_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueEngineStop_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueEngineStop_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueEngineStop_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueChangeSetpoint_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueChangeSetpoint_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueChangeSetpoint_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueSetFridgeOpMode_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueSetFridgeOpMode_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueSetFridgeOpMode_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueClearAlarms_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueClearAlarms_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueClearAlarms_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueDefrost_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueDefrost_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueDefrost_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueuePretrip_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueuePretrip_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueuePretrip_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueSetIntellisenseProfile_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueSetIntellisenseProfile_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueSetIntellisenseProfile_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigQueueDownloadIntellisenseProfiles_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRCOMDeviceRequestStatus_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetRCOMDeviceRequestStatus_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRCOMDeviceRequestStatus_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RemoteReeferConfigGetIntellisenseProfiles_v1CompletedEventHandler(ByVal sender As Object, ByVal e As RemoteReeferConfigGetIntellisenseProfiles_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoteReeferConfigGetIntellisenseProfiles_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetHoSDutyStateChanges_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetHoSDutyStateChanges_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHoSDutyStateChanges_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetHoSDriverAvailableHours_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetHoSDriverAvailableHours_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHoSDriverAvailableHours_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetHoSDriversDailyDutyLogSummary_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetHoSDriversDailyDutyLogSummary_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHoSDriversDailyDutyLogSummary_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetHoSDriversWithUpdatedDutyLogsSummary_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetHoSDriversWithUpdatedDutyLogsSummary_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHoSDriversWithUpdatedDutyLogsSummary_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property generationNumberForNextCall() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SetTrailerNoForVehicle_v1CompletedEventHandler(ByVal sender As Object, ByVal e As SetTrailerNoForVehicle_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetTrailerNoForVehicle_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SetShippingDocumentNoForVehicle_v1CompletedEventHandler(ByVal sender As Object, ByVal e As SetShippingDocumentNoForVehicle_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetShippingDocumentNoForVehicle_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTemperatureReadings_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetTemperatureReadings_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTemperatureReadings_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastRowId() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ajustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Get_TemperatureReadings_v1CompletedEventHandler(ByVal sender As Object, ByVal e As Get_TemperatureReadings_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_TemperatureReadings_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastRowId() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ajustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetFridgeAlarms_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetFridgeAlarms_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFridgeAlarms_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Get_ServiceInfo_v1CompletedEventHandler(ByVal sender As Object, ByVal e As Get_ServiceInfo_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ServiceInfo_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetServiceInfo_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetServiceInfo_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServiceInfo_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicles_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicles_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicles_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicleFolders_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleFolders_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleFolders_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetCurrentVehicleStatus_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetCurrentVehicleStatus_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCurrentVehicleStatus_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReadAllDataItems_v1CompletedEventHandler(ByVal sender As Object, ByVal e As ReadAllDataItems_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadAllDataItems_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertDataItems_v1CompletedEventHandler(ByVal sender As Object, ByVal e As InsertDataItems_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertDataItems_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property itemID() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReadDataItem_v1CompletedEventHandler(ByVal sender As Object, ByVal e As ReadDataItem_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadDataItem_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dataItem() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateDataItem_v1CompletedEventHandler(ByVal sender As Object, ByVal e As UpdateDataItem_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateDataItem_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnValue() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DeleteDataItem_v1CompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDataItem_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDataItem_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property returnValue() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AddDataItemGroup_v1CompletedEventHandler(ByVal sender As Object, ByVal e As AddDataItemGroup_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDataItemGroup_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AddDataItemFleet_v1CompletedEventHandler(ByVal sender As Object, ByVal e As AddDataItemFleet_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDataItemFleet_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SendRCOMInCabFormMessage_v1CompletedEventHandler(ByVal sender As Object, ByVal e As SendRCOMInCabFormMessage_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendRCOMInCabFormMessage_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRCOMInCabIncomingFormMessages_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetRCOMInCabIncomingFormMessages_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRCOMInCabIncomingFormMessages_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRCOMInCabOutgoingFormMessages_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetRCOMInCabOutgoingFormMessages_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRCOMInCabOutgoingFormMessages_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetFormDefinitions_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetFormDefinitions_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFormDefinitions_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AddFormDefinition_v1CompletedEventHandler(ByVal sender As Object, ByVal e As AddFormDefinition_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFormDefinition_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRCOMInCabStops_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetRCOMInCabStops_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRCOMInCabStops_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRCOMInCabStops_v2CompletedEventHandler(ByVal sender As Object, ByVal e As GetRCOMInCabStops_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRCOMInCabStops_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRCOMInCabTrips_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetRCOMInCabTrips_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRCOMInCabTrips_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CreateIncomingInCabMessage_v1CompletedEventHandler(ByVal sender As Object, ByVal e As CreateIncomingInCabMessage_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateIncomingInCabMessage_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property messageId() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetLiveTachographEvents_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetLiveTachographEvents_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLiveTachographEvents_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetLatestVehicleReadings_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestVehicleReadings_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestVehicleReadings_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetPTOEvents_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetPTOEvents_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPTOEvents_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicleStops_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleStops_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleStops_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Get_GPSReadings_v1CompletedEventHandler(ByVal sender As Object, ByVal e As Get_GPSReadings_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_GPSReadings_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastTimeStamp() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ajustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGPSReadings_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetGPSReadings_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGPSReadings_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastTimeStamp() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ajustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGpsReadingsForVehicle_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetGpsReadingsForVehicle_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGpsReadingsForVehicle_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastTimeStamp() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ajustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetFMSTrips_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetFMSTrips_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFMSTrips_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetFMSHarshBrakes_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetFMSHarshBrakes_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFMSHarshBrakes_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastGeneration() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedNumRows() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetCurrentDataTerminalStatus_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetCurrentDataTerminalStatus_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCurrentDataTerminalStatus_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicleWorkingSummary_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleWorkingSummary_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleWorkingSummary_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetVehicleActivities_v1CompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleActivities_v1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleActivities_v1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastStartTime() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errorMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property adjustedRowNumber() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
End Namespace
