'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace EventNotificationWSi
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="EventNotificationWSSoap", [Namespace]:="http://mixtelematics.com/WebServices/EventNotification"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityBase))>  _
    Partial Public Class EventNotificationWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private tokenHeaderValueField As TokenHeader
        
        Private GetRecentNotificationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNotificationsSinceIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNotificationsForVehicleInDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Position_Updater.My.MySettings.Default.Position_Updater_EventNotificationWSi_EventNotificationWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property TokenHeaderValue() As TokenHeader
            Get
                Return Me.tokenHeaderValueField
            End Get
            Set
                Me.tokenHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetRecentNotificationsCompleted As GetRecentNotificationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNotificationsSinceIDCompleted As GetNotificationsSinceIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNotificationsForVehicleInDateRangeCompleted As GetNotificationsForVehicleInDateRangeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mixtelematics.com/WebServices/EventNotification/GetRecentNotifications", RequestNamespace:="http://mixtelematics.com/WebServices/EventNotification", ResponseNamespace:="http://mixtelematics.com/WebServices/EventNotification", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecentNotifications(ByVal Count As Integer, ByVal EventIDs As String) As EventNotification()
            Dim results() As Object = Me.Invoke("GetRecentNotifications", New Object() {Count, EventIDs})
            Return CType(results(0),EventNotification())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecentNotificationsAsync(ByVal Count As Integer, ByVal EventIDs As String)
            Me.GetRecentNotificationsAsync(Count, EventIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecentNotificationsAsync(ByVal Count As Integer, ByVal EventIDs As String, ByVal userState As Object)
            If (Me.GetRecentNotificationsOperationCompleted Is Nothing) Then
                Me.GetRecentNotificationsOperationCompleted = AddressOf Me.OnGetRecentNotificationsOperationCompleted
            End If
            Me.InvokeAsync("GetRecentNotifications", New Object() {Count, EventIDs}, Me.GetRecentNotificationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecentNotificationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecentNotificationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecentNotificationsCompleted(Me, New GetRecentNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mixtelematics.com/WebServices/EventNotification/GetNotificationsSinceID", RequestNamespace:="http://mixtelematics.com/WebServices/EventNotification", ResponseNamespace:="http://mixtelematics.com/WebServices/EventNotification", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNotificationsSinceID(ByVal ID As Integer, ByVal EventIDs As String) As EventNotification()
            Dim results() As Object = Me.Invoke("GetNotificationsSinceID", New Object() {ID, EventIDs})
            Return CType(results(0),EventNotification())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNotificationsSinceIDAsync(ByVal ID As Integer, ByVal EventIDs As String)
            Me.GetNotificationsSinceIDAsync(ID, EventIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNotificationsSinceIDAsync(ByVal ID As Integer, ByVal EventIDs As String, ByVal userState As Object)
            If (Me.GetNotificationsSinceIDOperationCompleted Is Nothing) Then
                Me.GetNotificationsSinceIDOperationCompleted = AddressOf Me.OnGetNotificationsSinceIDOperationCompleted
            End If
            Me.InvokeAsync("GetNotificationsSinceID", New Object() {ID, EventIDs}, Me.GetNotificationsSinceIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNotificationsSinceIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNotificationsSinceIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNotificationsSinceIDCompleted(Me, New GetNotificationsSinceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mixtelematics.com/WebServices/EventNotification/GetNotificationsForVehicle"& _ 
            "InDateRange", RequestNamespace:="http://mixtelematics.com/WebServices/EventNotification", ResponseNamespace:="http://mixtelematics.com/WebServices/EventNotification", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNotificationsForVehicleInDateRange(ByVal VehicleID As Short, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EventIDs As String) As EventNotification()
            Dim results() As Object = Me.Invoke("GetNotificationsForVehicleInDateRange", New Object() {VehicleID, FromDate, ToDate, EventIDs})
            Return CType(results(0),EventNotification())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNotificationsForVehicleInDateRangeAsync(ByVal VehicleID As Short, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EventIDs As String)
            Me.GetNotificationsForVehicleInDateRangeAsync(VehicleID, FromDate, ToDate, EventIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNotificationsForVehicleInDateRangeAsync(ByVal VehicleID As Short, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EventIDs As String, ByVal userState As Object)
            If (Me.GetNotificationsForVehicleInDateRangeOperationCompleted Is Nothing) Then
                Me.GetNotificationsForVehicleInDateRangeOperationCompleted = AddressOf Me.OnGetNotificationsForVehicleInDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetNotificationsForVehicleInDateRange", New Object() {VehicleID, FromDate, ToDate, EventIDs}, Me.GetNotificationsForVehicleInDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNotificationsForVehicleInDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNotificationsForVehicleInDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNotificationsForVehicleInDateRangeCompleted(Me, New GetNotificationsForVehicleInDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification", IsNullable:=false)>  _
    Partial Public Class TokenHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private tokenField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Token() As String
            Get
                Return Me.tokenField
            End Get
            Set
                Me.tokenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EventNotification)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
    Partial Public MustInherit Class EntityBase
        
        Private idField As String
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mixtelematics.com/WebServices/EventNotification")>  _
    Partial Public Class EventNotification
        Inherits EntityBase
        
        Private priorityField As Byte
        
        Private receivedDateField As Date
        
        Private eventDateField As System.Nullable(Of Date)
        
        Private descriptionField As String
        
        Private vehicleIDField As Short
        
        Private driverIDField As Short
        
        Private eventIDField As Short
        
        Private gPSIDField As System.Nullable(Of Integer)
        
        Private valueField As System.Nullable(Of Single)
        
        Private odometerField As Single
        
        Private speedField As Single
        
        Private isArmedField As Boolean
        
        Private latitudeField As System.Nullable(Of Single)
        
        Private longitudeField As System.Nullable(Of Single)
        
        '''<remarks/>
        Public Property Priority() As Byte
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReceivedDate() As Date
            Get
                Return Me.receivedDateField
            End Get
            Set
                Me.receivedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EventDate() As System.Nullable(Of Date)
            Get
                Return Me.eventDateField
            End Get
            Set
                Me.eventDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VehicleID() As Short
            Get
                Return Me.vehicleIDField
            End Get
            Set
                Me.vehicleIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriverID() As Short
            Get
                Return Me.driverIDField
            End Get
            Set
                Me.driverIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventID() As Short
            Get
                Return Me.eventIDField
            End Get
            Set
                Me.eventIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property GPSID() As System.Nullable(Of Integer)
            Get
                Return Me.gPSIDField
            End Get
            Set
                Me.gPSIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Value() As System.Nullable(Of Single)
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Odometer() As Single
            Get
                Return Me.odometerField
            End Get
            Set
                Me.odometerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Speed() As Single
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsArmed() As Boolean
            Get
                Return Me.isArmedField
            End Get
            Set
                Me.isArmedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Latitude() As System.Nullable(Of Single)
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Longitude() As System.Nullable(Of Single)
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRecentNotificationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecentNotificationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecentNotificationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EventNotification()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EventNotification())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetNotificationsSinceIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetNotificationsSinceIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNotificationsSinceIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EventNotification()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EventNotification())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetNotificationsForVehicleInDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetNotificationsForVehicleInDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNotificationsForVehicleInDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EventNotification()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EventNotification())
            End Get
        End Property
    End Class
End Namespace
