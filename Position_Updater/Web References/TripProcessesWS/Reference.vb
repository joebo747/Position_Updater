'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace TripProcessesWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TripProcessesWSSoap", [Namespace]:="http://www.omnibridge.com/SDKWebServices/AssetData"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityBase))>  _
    Partial Public Class TripProcessesWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private tokenHeaderValueField As TokenHeader
        
        Private GetTripsForDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsWithTotalsForDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsSinceTripIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsWithTotalsSinceTripIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsForVehicleAndDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsForDriverAndDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTripDriverIDsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsWithTotalsForVehicleInDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTripsWithTotalsForDriverInDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Position_Updater.My.MySettings.Default.Position_Updater_TripProcessesWS_TripProcessesWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property TokenHeaderValue() As TokenHeader
            Get
                Return Me.tokenHeaderValueField
            End Get
            Set
                Me.tokenHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetTripsForDateRangeCompleted As GetTripsForDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsWithTotalsForDateRangeCompleted As GetTripsWithTotalsForDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsSinceTripIDCompleted As GetTripsSinceTripIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsWithTotalsSinceTripIDCompleted As GetTripsWithTotalsSinceTripIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsForVehicleAndDateRangeCompleted As GetTripsForVehicleAndDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsForDriverAndDateRangeCompleted As GetTripsForDriverAndDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTripDriverIDsCompleted As UpdateTripDriverIDsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsWithTotalsForVehicleInDateRangeCompleted As GetTripsWithTotalsForVehicleInDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTripsWithTotalsForDriverInDateRangeCompleted As GetTripsWithTotalsForDriverInDateRangeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsForDateRange", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsForDateRange(ByVal StartDateTime As Date, ByVal EndDateTime As Date) As Trip()
            Dim results() As Object = Me.Invoke("GetTripsForDateRange", New Object() {StartDateTime, EndDateTime})
            Return CType(results(0),Trip())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsForDateRangeAsync(ByVal StartDateTime As Date, ByVal EndDateTime As Date)
            Me.GetTripsForDateRangeAsync(StartDateTime, EndDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsForDateRangeAsync(ByVal StartDateTime As Date, ByVal EndDateTime As Date, ByVal userState As Object)
            If (Me.GetTripsForDateRangeOperationCompleted Is Nothing) Then
                Me.GetTripsForDateRangeOperationCompleted = AddressOf Me.OnGetTripsForDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTripsForDateRange", New Object() {StartDateTime, EndDateTime}, Me.GetTripsForDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsForDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsForDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsForDateRangeCompleted(Me, New GetTripsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsWithTotalsForDateRange"& _ 
            "", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsWithTotalsForDateRange(ByVal StartDateTime As Date, ByVal EndDateTime As Date) As TripWithTotals()
            Dim results() As Object = Me.Invoke("GetTripsWithTotalsForDateRange", New Object() {StartDateTime, EndDateTime})
            Return CType(results(0),TripWithTotals())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsForDateRangeAsync(ByVal StartDateTime As Date, ByVal EndDateTime As Date)
            Me.GetTripsWithTotalsForDateRangeAsync(StartDateTime, EndDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsForDateRangeAsync(ByVal StartDateTime As Date, ByVal EndDateTime As Date, ByVal userState As Object)
            If (Me.GetTripsWithTotalsForDateRangeOperationCompleted Is Nothing) Then
                Me.GetTripsWithTotalsForDateRangeOperationCompleted = AddressOf Me.OnGetTripsWithTotalsForDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTripsWithTotalsForDateRange", New Object() {StartDateTime, EndDateTime}, Me.GetTripsWithTotalsForDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsWithTotalsForDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsWithTotalsForDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsWithTotalsForDateRangeCompleted(Me, New GetTripsWithTotalsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsSinceTripID", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsSinceTripID(ByVal TripID As Integer) As Trip()
            Dim results() As Object = Me.Invoke("GetTripsSinceTripID", New Object() {TripID})
            Return CType(results(0),Trip())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsSinceTripIDAsync(ByVal TripID As Integer)
            Me.GetTripsSinceTripIDAsync(TripID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsSinceTripIDAsync(ByVal TripID As Integer, ByVal userState As Object)
            If (Me.GetTripsSinceTripIDOperationCompleted Is Nothing) Then
                Me.GetTripsSinceTripIDOperationCompleted = AddressOf Me.OnGetTripsSinceTripIDOperationCompleted
            End If
            Me.InvokeAsync("GetTripsSinceTripID", New Object() {TripID}, Me.GetTripsSinceTripIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsSinceTripIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsSinceTripIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsSinceTripIDCompleted(Me, New GetTripsSinceTripIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsWithTotalsSinceTripID", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsWithTotalsSinceTripID(ByVal TripID As Integer) As TripWithTotals()
            Dim results() As Object = Me.Invoke("GetTripsWithTotalsSinceTripID", New Object() {TripID})
            Return CType(results(0),TripWithTotals())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsSinceTripIDAsync(ByVal TripID As Integer)
            Me.GetTripsWithTotalsSinceTripIDAsync(TripID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsSinceTripIDAsync(ByVal TripID As Integer, ByVal userState As Object)
            If (Me.GetTripsWithTotalsSinceTripIDOperationCompleted Is Nothing) Then
                Me.GetTripsWithTotalsSinceTripIDOperationCompleted = AddressOf Me.OnGetTripsWithTotalsSinceTripIDOperationCompleted
            End If
            Me.InvokeAsync("GetTripsWithTotalsSinceTripID", New Object() {TripID}, Me.GetTripsWithTotalsSinceTripIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsWithTotalsSinceTripIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsWithTotalsSinceTripIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsWithTotalsSinceTripIDCompleted(Me, New GetTripsWithTotalsSinceTripIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsForVehicleAndDateRange"& _ 
            "", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsForVehicleAndDateRange(ByVal VehicleID As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date) As Trip()
            Dim results() As Object = Me.Invoke("GetTripsForVehicleAndDateRange", New Object() {VehicleID, StartDateTime, EndDateTime})
            Return CType(results(0),Trip())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsForVehicleAndDateRangeAsync(ByVal VehicleID As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date)
            Me.GetTripsForVehicleAndDateRangeAsync(VehicleID, StartDateTime, EndDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsForVehicleAndDateRangeAsync(ByVal VehicleID As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date, ByVal userState As Object)
            If (Me.GetTripsForVehicleAndDateRangeOperationCompleted Is Nothing) Then
                Me.GetTripsForVehicleAndDateRangeOperationCompleted = AddressOf Me.OnGetTripsForVehicleAndDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTripsForVehicleAndDateRange", New Object() {VehicleID, StartDateTime, EndDateTime}, Me.GetTripsForVehicleAndDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsForVehicleAndDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsForVehicleAndDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsForVehicleAndDateRangeCompleted(Me, New GetTripsForVehicleAndDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsForDriverAndDateRange", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsForDriverAndDateRange(ByVal DriverID As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date) As Trip()
            Dim results() As Object = Me.Invoke("GetTripsForDriverAndDateRange", New Object() {DriverID, StartDateTime, EndDateTime})
            Return CType(results(0),Trip())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsForDriverAndDateRangeAsync(ByVal DriverID As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date)
            Me.GetTripsForDriverAndDateRangeAsync(DriverID, StartDateTime, EndDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsForDriverAndDateRangeAsync(ByVal DriverID As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date, ByVal userState As Object)
            If (Me.GetTripsForDriverAndDateRangeOperationCompleted Is Nothing) Then
                Me.GetTripsForDriverAndDateRangeOperationCompleted = AddressOf Me.OnGetTripsForDriverAndDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTripsForDriverAndDateRange", New Object() {DriverID, StartDateTime, EndDateTime}, Me.GetTripsForDriverAndDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsForDriverAndDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsForDriverAndDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsForDriverAndDateRangeCompleted(Me, New GetTripsForDriverAndDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/UpdateTripDriverIDs", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateTripDriverIDs(ByVal Trips() As Trip)
            Me.Invoke("UpdateTripDriverIDs", New Object() {Trips})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTripDriverIDsAsync(ByVal Trips() As Trip)
            Me.UpdateTripDriverIDsAsync(Trips, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTripDriverIDsAsync(ByVal Trips() As Trip, ByVal userState As Object)
            If (Me.UpdateTripDriverIDsOperationCompleted Is Nothing) Then
                Me.UpdateTripDriverIDsOperationCompleted = AddressOf Me.OnUpdateTripDriverIDsOperationCompleted
            End If
            Me.InvokeAsync("UpdateTripDriverIDs", New Object() {Trips}, Me.UpdateTripDriverIDsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTripDriverIDsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTripDriverIDsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTripDriverIDsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsWithTotalsForVehicleIn"& _ 
            "DateRange", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsWithTotalsForVehicleInDateRange(ByVal vehicleId As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date) As TripWithTotals()
            Dim results() As Object = Me.Invoke("GetTripsWithTotalsForVehicleInDateRange", New Object() {vehicleId, StartDateTime, EndDateTime})
            Return CType(results(0),TripWithTotals())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsForVehicleInDateRangeAsync(ByVal vehicleId As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date)
            Me.GetTripsWithTotalsForVehicleInDateRangeAsync(vehicleId, StartDateTime, EndDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsForVehicleInDateRangeAsync(ByVal vehicleId As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date, ByVal userState As Object)
            If (Me.GetTripsWithTotalsForVehicleInDateRangeOperationCompleted Is Nothing) Then
                Me.GetTripsWithTotalsForVehicleInDateRangeOperationCompleted = AddressOf Me.OnGetTripsWithTotalsForVehicleInDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTripsWithTotalsForVehicleInDateRange", New Object() {vehicleId, StartDateTime, EndDateTime}, Me.GetTripsWithTotalsForVehicleInDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsWithTotalsForVehicleInDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsWithTotalsForVehicleInDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsWithTotalsForVehicleInDateRangeCompleted(Me, New GetTripsWithTotalsForVehicleInDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("TokenHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnibridge.com/SDKWebServices/AssetData/GetTripsWithTotalsForDriverInD"& _ 
            "ateRange", RequestNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", ResponseNamespace:="http://www.omnibridge.com/SDKWebServices/AssetData", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTripsWithTotalsForDriverInDateRange(ByVal driverId As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date) As TripWithTotals()
            Dim results() As Object = Me.Invoke("GetTripsWithTotalsForDriverInDateRange", New Object() {driverId, StartDateTime, EndDateTime})
            Return CType(results(0),TripWithTotals())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsForDriverInDateRangeAsync(ByVal driverId As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date)
            Me.GetTripsWithTotalsForDriverInDateRangeAsync(driverId, StartDateTime, EndDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTripsWithTotalsForDriverInDateRangeAsync(ByVal driverId As Short, ByVal StartDateTime As Date, ByVal EndDateTime As Date, ByVal userState As Object)
            If (Me.GetTripsWithTotalsForDriverInDateRangeOperationCompleted Is Nothing) Then
                Me.GetTripsWithTotalsForDriverInDateRangeOperationCompleted = AddressOf Me.OnGetTripsWithTotalsForDriverInDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTripsWithTotalsForDriverInDateRange", New Object() {driverId, StartDateTime, EndDateTime}, Me.GetTripsWithTotalsForDriverInDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTripsWithTotalsForDriverInDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTripsWithTotalsForDriverInDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTripsWithTotalsForDriverInDateRangeCompleted(Me, New GetTripsWithTotalsForDriverInDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.omnibridge.com/SDKWebServices/AssetData"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://www.omnibridge.com/SDKWebServices/AssetData", IsNullable:=false)>  _
    Partial Public Class TokenHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private tokenField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Token() As String
            Get
                Return Me.tokenField
            End Get
            Set
                Me.tokenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(TripWithTotals)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Trip)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.omnibridge.com/SDKWebServices/AssetData")>  _
    Partial Public MustInherit Class EntityBase
        
        Private idField As String
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.omnibridge.com/SDKWebServices/AssetData")>  _
    Partial Public Class TripWithTotals
        Inherits EntityBase
        
        Private tripField As Trip
        
        Private startSubTripSeqField As System.Nullable(Of Short)
        
        Private endSubTripSeqField As System.Nullable(Of Short)
        
        Private tripDistanceField As Decimal
        
        Private odometerField As Decimal
        
        Private maxSpeedField As Decimal
        
        Private speedTimeField As Integer
        
        Private speedOccursField As Short
        
        Private maxBrakeField As Decimal
        
        Private brakeTimeField As Integer
        
        Private brakeOccursField As Short
        
        Private maxAccelField As Decimal
        
        Private accelTimeField As Integer
        
        Private accelOccursField As Short
        
        Private maxRPMField As Decimal
        
        Private rPMTimeField As Integer
        
        Private rPMOccursField As Short
        
        Private gBTimeField As Integer
        
        Private exIdleTimeField As Integer
        
        Private exIdleOccursField As Short
        
        Private nIdleTimeField As Integer
        
        Private nIdleOccursField As Short
        
        Private standingTimeField As Integer
        
        Private litresField As Decimal
        
        Private startGPSIDField As Integer
        
        Private endGPSIDField As Integer
        
        Private startEngineSecondsField As Integer
        
        Private endEngineSecondsField As Integer
        
        '''<remarks/>
        Public Property Trip() As Trip
            Get
                Return Me.tripField
            End Get
            Set
                Me.tripField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property StartSubTripSeq() As System.Nullable(Of Short)
            Get
                Return Me.startSubTripSeqField
            End Get
            Set
                Me.startSubTripSeqField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EndSubTripSeq() As System.Nullable(Of Short)
            Get
                Return Me.endSubTripSeqField
            End Get
            Set
                Me.endSubTripSeqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TripDistance() As Decimal
            Get
                Return Me.tripDistanceField
            End Get
            Set
                Me.tripDistanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Odometer() As Decimal
            Get
                Return Me.odometerField
            End Get
            Set
                Me.odometerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxSpeed() As Decimal
            Get
                Return Me.maxSpeedField
            End Get
            Set
                Me.maxSpeedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SpeedTime() As Integer
            Get
                Return Me.speedTimeField
            End Get
            Set
                Me.speedTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SpeedOccurs() As Short
            Get
                Return Me.speedOccursField
            End Get
            Set
                Me.speedOccursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxBrake() As Decimal
            Get
                Return Me.maxBrakeField
            End Get
            Set
                Me.maxBrakeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BrakeTime() As Integer
            Get
                Return Me.brakeTimeField
            End Get
            Set
                Me.brakeTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BrakeOccurs() As Short
            Get
                Return Me.brakeOccursField
            End Get
            Set
                Me.brakeOccursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxAccel() As Decimal
            Get
                Return Me.maxAccelField
            End Get
            Set
                Me.maxAccelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccelTime() As Integer
            Get
                Return Me.accelTimeField
            End Get
            Set
                Me.accelTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccelOccurs() As Short
            Get
                Return Me.accelOccursField
            End Get
            Set
                Me.accelOccursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxRPM() As Decimal
            Get
                Return Me.maxRPMField
            End Get
            Set
                Me.maxRPMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RPMTime() As Integer
            Get
                Return Me.rPMTimeField
            End Get
            Set
                Me.rPMTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RPMOccurs() As Short
            Get
                Return Me.rPMOccursField
            End Get
            Set
                Me.rPMOccursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GBTime() As Integer
            Get
                Return Me.gBTimeField
            End Get
            Set
                Me.gBTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExIdleTime() As Integer
            Get
                Return Me.exIdleTimeField
            End Get
            Set
                Me.exIdleTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExIdleOccurs() As Short
            Get
                Return Me.exIdleOccursField
            End Get
            Set
                Me.exIdleOccursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NIdleTime() As Integer
            Get
                Return Me.nIdleTimeField
            End Get
            Set
                Me.nIdleTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NIdleOccurs() As Short
            Get
                Return Me.nIdleOccursField
            End Get
            Set
                Me.nIdleOccursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StandingTime() As Integer
            Get
                Return Me.standingTimeField
            End Get
            Set
                Me.standingTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Litres() As Decimal
            Get
                Return Me.litresField
            End Get
            Set
                Me.litresField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartGPSID() As Integer
            Get
                Return Me.startGPSIDField
            End Get
            Set
                Me.startGPSIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndGPSID() As Integer
            Get
                Return Me.endGPSIDField
            End Get
            Set
                Me.endGPSIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartEngineSeconds() As Integer
            Get
                Return Me.startEngineSecondsField
            End Get
            Set
                Me.startEngineSecondsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndEngineSeconds() As Integer
            Get
                Return Me.endEngineSecondsField
            End Get
            Set
                Me.endEngineSecondsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.omnibridge.com/SDKWebServices/AssetData")>  _
    Partial Public Class Trip
        Inherits EntityBase
        
        Private vehicleIDField As Short
        
        Private tripNoField As Integer
        
        Private driverIDField As Short
        
        Private originalDriverIDField As Short
        
        Private tripStartField As Date
        
        Private tripEndField As Date
        
        Private categoryIDField As Integer
        
        Private notesField As String
        
        '''<remarks/>
        Public Property VehicleID() As Short
            Get
                Return Me.vehicleIDField
            End Get
            Set
                Me.vehicleIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TripNo() As Integer
            Get
                Return Me.tripNoField
            End Get
            Set
                Me.tripNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriverID() As Short
            Get
                Return Me.driverIDField
            End Get
            Set
                Me.driverIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OriginalDriverID() As Short
            Get
                Return Me.originalDriverIDField
            End Get
            Set
                Me.originalDriverIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TripStart() As Date
            Get
                Return Me.tripStartField
            End Get
            Set
                Me.tripStartField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TripEnd() As Date
            Get
                Return Me.tripEndField
            End Get
            Set
                Me.tripEndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryID() As Integer
            Get
                Return Me.categoryIDField
            End Get
            Set
                Me.categoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsForDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsForDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsForDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trip()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trip())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsWithTotalsForDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsWithTotalsForDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsWithTotalsForDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TripWithTotals()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TripWithTotals())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsSinceTripIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsSinceTripIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsSinceTripIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trip()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trip())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsWithTotalsSinceTripIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsWithTotalsSinceTripIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsWithTotalsSinceTripIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TripWithTotals()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TripWithTotals())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsForVehicleAndDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsForVehicleAndDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsForVehicleAndDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trip()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trip())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsForDriverAndDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsForDriverAndDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsForDriverAndDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trip()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trip())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateTripDriverIDsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsWithTotalsForVehicleInDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsWithTotalsForVehicleInDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsWithTotalsForVehicleInDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TripWithTotals()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TripWithTotals())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetTripsWithTotalsForDriverInDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTripsWithTotalsForDriverInDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTripsWithTotalsForDriverInDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TripWithTotals()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TripWithTotals())
            End Get
        End Property
    End Class
End Namespace
